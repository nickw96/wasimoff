#!/usr/bin/env bash
# {{ ansible_managed }}
# script to register the tsp custom image and start a workload with locust
say() { printf '\033[1m>> %s\033[0m\n' "$*"; }
set -eu

# filled in by ansible templating
TSP_N="${1:-{{ tsp_n_default }}}"
SCENARIO="{{ scenario }}"

SERVERLEDGE="{{ serverledge }}"
say "register custom tsp runtime in serverledge $SERVERLEDGE"
until serverledge-cli -H broker.ansemjo.de delete --function tsp | grep "404 Not Found"; do sleep 0.4; done
sleep 1
serverledge-cli -H "$SERVERLEDGE" create \
  --function tsp --runtime custom --memory 128 \
  --custom_image docker.io/ansemjo/serverledge-custom:tsp
echo
sleep 2

say "create results directory for $SCENARIO/tsp-$TSP_N/serverledge"
RESULTS="$HOME/results/$SCENARIO/tsp-$TSP_N/serverledge"
if [[ -d $RESULTS ]]; then
  say " !!! WARNING !!! results directory exists already. is this a rerun?"
  read -rsp 'Press any key to continue ...' -n1 _;
  echo;
fi
ts=$(date +%s)
mkdir -p "$RESULTS/$ts"
cd "$RESULTS/$ts"
pwd

say "start locust and record statistics"
locust -f /root/locust/workload_serverledge.py --headless \
  --csv locust --logfile locust.log \
  --users "{{ locust_users }}" --spawn-rate 4 \
  --run-time "{{ locust_run_time }}" \
  --tsp-n "$TSP_N" \
|| curl -d "ERRORS: $SCENARIO (serverledge, tsp-$TSP_N)" https://ntfy.sh/wasimoff_eval

say "send notification"
curl -d "$SCENARIO (serverledge, tsp-$TSP_N)" https://ntfy.sh/wasimoff_eval

say ""
say "DONE. DON'T FORGET TO COPY RESULTS!"
say ""