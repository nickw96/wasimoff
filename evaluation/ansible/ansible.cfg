# Ansible Configuration Settings
# https://docs.ansible.com/ansible/latest/reference_appendices/config.html

# Nearly all parameters can be overridden in ansible-playbook or with
# command line flags. Ansible will read the *first* of the following files:
# - ANSIBLE_CONFIG (from environment, if set)
# - ./ansible.cfg (current working directory)
# - ~/.ansible.cfg (home directory)
# - /etc/ansible/ansible.cfg

[defaults]

inventory   = ./inventory.ini
roles_path  = ./roles:/etc/ansible/roles
retry_files_save_path = /tmp/ansible-retry

nocows      = 1
gathering   = smart

log_path = ./ansible_log.txt

# default user to use for playbooks if user is not specified
# (/usr/bin/ansible will use current user as default)
#remote_user = root
remote_user = ansible

# format of string {{ ansible_managed }} available within Jinja2
# templates indicates to users editing templates files will be replaced.
# replacing {file}, {host} and {uid} and strftime codes with proper values.
#ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
# {file}, {host}, {uid}, and the timestamp can all interfere with idempotence
# in some situations so the default is a static string:
ansible_managed = Ansible managed: {file} last modified by {uid} on {host}

[inventory]

# enable inventory plugins, default: 'host_list', 'script', 'yaml', 'ini'
#enable_plugins = host_list, virtualbox, yaml, constructed

# ignore these extensions when parsing a directory as inventory source
#ignore_extensions = .pyc, .pyo, .swp, .bak, ~, .rpm, .md, .txt, ~, .orig, .ini, .cfg, .retry

[ssh_connection]

# Leaving off ControlPersist will result in poor performance, so use
# paramiko on older platforms rather than removing it, -C controls compression use
ssh_args = -C -o ControlMaster=auto -o ControlPersist=10m

# Enabling pipelining reduces the number of SSH operations required to
# execute a module on the remote server. This can result in a significant
# performance improvement when enabled, however when using "sudo:" you must
# first disable 'requiretty' in /etc/sudoers
#
# By default, this option is disabled to preserve compatibility with
# sudoers configurations that have requiretty (the default on many distros).
#
pipelining = True
