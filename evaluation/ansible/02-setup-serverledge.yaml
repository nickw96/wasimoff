#!/usr/bin/env ansible-playbook
# This playbook is a combination of different playbooks in github.com/grussorusso/serverledge-deploy.
---
# INSTALL DOCKER ETC.
- name: install requirements on all nodes
  hosts: broker, provider
  tags: [ docker ]
  vars:

    # add the ansible user to docker group
    docker_users: [ "{{ ansible_user }}" ]

  tasks:

    - name: verify that we're running on a Debian 12 with systemd and apt
      ansible.builtin.assert:
        that:
          - ansible_facts.system == "Linux"
          - ansible_facts.machine == "x86_64"
          - ansible_facts.distribution == "Debian"
          - ansible_facts.lsb.release == "12"
          - ansible_facts.service_mgr == "systemd"
          - ansible_facts.pkg_mgr == "apt"

    - name: ensure that required packages are installed
      ansible.builtin.apt:
        package: [ firewalld, unzip ]
        state: present
        update_cache: yes

    - name: firewalld is started and enabled
      ansible.builtin.systemd:
        service: firewalld
        state: started
        enabled: yes

    - name: install docker using geerlingguy.docker role
      ansible.builtin.include_role:
        role: geerlingguy.docker


# START ETCD
- name: start etcd container on one cloud node
  hosts: broker
  tags: [ etcd ]
  tasks:

    - name: firewall port for etcd is open
      loop: [ etcd-client ]
      ansible.posix.firewalld:
        service: "{{ item }}"
        state: enabled
        permanent: yes
        immediate: yes

    - name: start an etcd container
      community.docker.docker_container:
        name: serverledge-etcd
        image: bitnami/etcd:latest
        state: started
        recreate: yes
        restart_policy: always
        ports:
          # publish etcd port on external interface
          - "2379:2379"
        env:
          # allow completely unauthenticated access
          ALLOW_NONE_AUTHENTICATION: "yes"


# SETUP SERVERLEDGE NODE
- name: setup and start serverledge nodes
  hosts: broker, provider
  tags: [ serverledge ]
  vars:

    # variables for the service
    serverledge_bindir: /usr/local/bin
    serverledge_config: /etc/serverledge.yaml
    serverledge_etcd_addr: "{{ serverledge }}:2379"

  tasks:

    - name: firewall port for api is open
      loop: [ "1323/tcp" ]
      ansible.posix.firewalld:
        port: "{{ item }}"
        state: enabled
        permanent: yes
        immediate: yes

    - name: unpacked serverledge binaries to the node
      ansible.builtin.unarchive:
        dest: /usr/local/bin/
        src: "{{ serverledge_zip }}"
        include: [ serverledge, serverledge-cli, serverledge-lb ]

    - name: templated serverledge configuration file
      ansible.builtin.template:
        dest: "{{ serverledge_config }}"
        src: templates/serverledge.yaml.j2
        mode: "0644"

    - name: templated serverledge systemd service
      ansible.builtin.template:
        dest: /etc/systemd/system/serverledge.service
        src: templates/serverledge.service.j2
        mode: "0644"
      vars:
        bin: '{{ "serverledge-lb" if ansible_host in groups["broker"] else "serverledge" }}'

    - name: custom image is pulled in advance
      community.docker.docker_image:
        name: "docker.io/ansemjo/serverledge-custom:tsp"
        source: pull

    - name: make sure the services are always (re)started
      ansible.builtin.systemd:
        service: "{{ item }}"
        daemon_reload: yes
        state: restarted
        enabled: yes
      loop:
        - serverledge.service
        - docker.service
        - docker.socket
        - containerd.service


# PUT CLI ON LOCUST HOST
- name: upload serverledge-cli to locust node
  hosts: locust
  tags: [ serverledge, locust ]
  tasks:

    - name: unpacked serverledge-cli binary to locust node
      ansible.builtin.unarchive:
        dest: /usr/local/bin/
        src: "{{ serverledge_zip }}"
        include: [ serverledge-cli ]

