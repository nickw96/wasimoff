// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/v1/messages.proto

package wasimoffv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Subprotocol is used to identify the concrete encoding on the wire.
type Subprotocol int32

const (
	Subprotocol_UNKNOWN                       Subprotocol = 0
	Subprotocol_wasimoff_provider_v1_protobuf Subprotocol = 1 // binary messages with Protobuf encoding
	Subprotocol_wasimoff_provider_v1_json     Subprotocol = 2 // text messages with JSON encoding
)

// Enum value maps for Subprotocol.
var (
	Subprotocol_name = map[int32]string{
		0: "UNKNOWN",
		1: "wasimoff_provider_v1_protobuf",
		2: "wasimoff_provider_v1_json",
	}
	Subprotocol_value = map[string]int32{
		"UNKNOWN":                       0,
		"wasimoff_provider_v1_protobuf": 1,
		"wasimoff_provider_v1_json":     2,
	}
)

func (x Subprotocol) Enum() *Subprotocol {
	p := new(Subprotocol)
	*p = x
	return p
}

func (x Subprotocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subprotocol) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_messages_proto_enumTypes[0].Descriptor()
}

func (Subprotocol) Type() protoreflect.EnumType {
	return &file_proto_v1_messages_proto_enumTypes[0]
}

func (x Subprotocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subprotocol.Descriptor instead.
func (Subprotocol) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{0}
}

type Envelope_MessageType int32

const (
	Envelope_UNKNOWN  Envelope_MessageType = 0
	Envelope_Request  Envelope_MessageType = 1
	Envelope_Response Envelope_MessageType = 2
	Envelope_Event    Envelope_MessageType = 3
)

// Enum value maps for Envelope_MessageType.
var (
	Envelope_MessageType_name = map[int32]string{
		0: "UNKNOWN",
		1: "Request",
		2: "Response",
		3: "Event",
	}
	Envelope_MessageType_value = map[string]int32{
		"UNKNOWN":  0,
		"Request":  1,
		"Response": 2,
		"Event":    3,
	}
)

func (x Envelope_MessageType) Enum() *Envelope_MessageType {
	p := new(Envelope_MessageType)
	*p = x
	return p
}

func (x Envelope_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Envelope_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_messages_proto_enumTypes[1].Descriptor()
}

func (Envelope_MessageType) Type() protoreflect.EnumType {
	return &file_proto_v1_messages_proto_enumTypes[1]
}

func (x Envelope_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Envelope_MessageType.Descriptor instead.
func (Envelope_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{0, 0}
}

// Envelope is a generic message wrapper with a sequence counter and message type.
// The payload contains a { Request, Response, Event }.
type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The sequence number is incremented for each message but Request and Event
	// count independently. Responses must always reuse the Request's sequence
	// number so they can be routed to the caller correctly.
	Sequence *uint64 `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	// The message type indicates the payload contents: { Request, Response, Event }.
	Type *Envelope_MessageType `protobuf:"varint,2,opt,name=type,enum=wasimoff.v1.Envelope_MessageType" json:"type,omitempty"`
	// The presence of an error string indicates a fatal failure with a request.
	// Responses should encode specific errors within the payload, if possible.
	Error *string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	// The payload itself. Needs to be (un)packed with `anypb`.
	Payload       *anypb.Any `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_proto_v1_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetSequence() uint64 {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return 0
}

func (x *Envelope) GetType() Envelope_MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Envelope_UNKNOWN
}

func (x *Envelope) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Envelope) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

// The task message contains parameters to instantiate a task of a certain format
// and return the output upon successful execution. The Request and Response herein
// are the smallest unit of work that should be sent on the wire.
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_v1_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1}
}

// File is a file reference with optional mime-type. The ref could be a plain
// filename, a prefixed hash digest or a URL to fetch from. When stored, a hash
// digest should be computed to have a stable identifier.
type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ref           *string                `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`     // filename, encoded digest or URL
	Media         *string                `protobuf:"bytes,2,opt,name=media" json:"media,omitempty"` // media type in MIME notation
	Blob          []byte                 `protobuf:"bytes,3,opt,name=blob" json:"blob,omitempty"`   // the actual file contents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_proto_v1_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{2}
}

func (x *File) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *File) GetMedia() string {
	if x != nil && x.Media != nil {
		return *x.Media
	}
	return ""
}

func (x *File) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

// FileListing asks for a listing of all available files on Provider
type FileListingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListingRequest) Reset() {
	*x = FileListingRequest{}
	mi := &file_proto_v1_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListingRequest) ProtoMessage() {}

func (x *FileListingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListingRequest.ProtoReflect.Descriptor instead.
func (*FileListingRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3}
}

type FileListingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []string               `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListingResponse) Reset() {
	*x = FileListingResponse{}
	mi := &file_proto_v1_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListingResponse) ProtoMessage() {}

func (x *FileListingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListingResponse.ProtoReflect.Descriptor instead.
func (*FileListingResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{4}
}

func (x *FileListingResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

// FileProbe checks if a certain file exists on provider
type FileProbeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *string                `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileProbeRequest) Reset() {
	*x = FileProbeRequest{}
	mi := &file_proto_v1_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProbeRequest) ProtoMessage() {}

func (x *FileProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProbeRequest.ProtoReflect.Descriptor instead.
func (*FileProbeRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{5}
}

func (x *FileProbeRequest) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

type FileProbeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            *bool                  `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileProbeResponse) Reset() {
	*x = FileProbeResponse{}
	mi := &file_proto_v1_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProbeResponse) ProtoMessage() {}

func (x *FileProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProbeResponse.ProtoReflect.Descriptor instead.
func (*FileProbeResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{6}
}

func (x *FileProbeResponse) GetOk() bool {
	if x != nil && x.Ok != nil {
		return *x.Ok
	}
	return false
}

// FileUpload pushes a file to the Provider.
type FileUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upload        *File                  `protobuf:"bytes,1,opt,name=upload" json:"upload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadRequest) Reset() {
	*x = FileUploadRequest{}
	mi := &file_proto_v1_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRequest) ProtoMessage() {}

func (x *FileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRequest.ProtoReflect.Descriptor instead.
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{7}
}

func (x *FileUploadRequest) GetUpload() *File {
	if x != nil {
		return x.Upload
	}
	return nil
}

type FileUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Err           *string                `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadResponse) Reset() {
	*x = FileUploadResponse{}
	mi := &file_proto_v1_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadResponse) ProtoMessage() {}

func (x *FileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadResponse.ProtoReflect.Descriptor instead.
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{8}
}

func (x *FileUploadResponse) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

// FileDownload can be sent by the Provider to request a file download.
type FileDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *string                `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_proto_v1_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{9}
}

func (x *FileDownloadRequest) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

type FileDownloadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Download      *File                  `protobuf:"bytes,1,opt,name=download" json:"download,omitempty"`
	Err           *string                `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadResponse) Reset() {
	*x = FileDownloadResponse{}
	mi := &file_proto_v1_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadResponse) ProtoMessage() {}

func (x *FileDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadResponse.ProtoReflect.Descriptor instead.
func (*FileDownloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{10}
}

func (x *FileDownloadResponse) GetDownload() *File {
	if x != nil {
		return x.Download
	}
	return nil
}

func (x *FileDownloadResponse) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_v1_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{11}
}

type Client struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client) Reset() {
	*x = Client{}
	mi := &file_proto_v1_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{12}
}

// Job specifications are serialized versions of a group of tasks. These can
// be ingested by the Client CLI and sent to a Broker.
type JobSpecification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobSpecification) Reset() {
	*x = JobSpecification{}
	mi := &file_proto_v1_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecification) ProtoMessage() {}

func (x *JobSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecification.ProtoReflect.Descriptor instead.
func (*JobSpecification) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{13}
}

// Information about this task for identification and tracing.
type Task_Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`               // unique identifier for this task
	Requester     *string                `protobuf:"bytes,2,opt,name=requester" json:"requester,omitempty"` // who is requesting this task
	Provider      *string                `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`   // which provider executed this task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Metadata) Reset() {
	*x = Task_Metadata{}
	mi := &file_proto_v1_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Metadata) ProtoMessage() {}

func (x *Task_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Metadata.ProtoReflect.Descriptor instead.
func (*Task_Metadata) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Task_Metadata) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Task_Metadata) GetRequester() string {
	if x != nil && x.Requester != nil {
		return *x.Requester
	}
	return ""
}

func (x *Task_Metadata) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

// Quality of Service (QoS) parameters for a given task.
type Task_QoS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Priority      *bool                  `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deadline" json:"deadline,omitempty"` // TODO
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_QoS) Reset() {
	*x = Task_QoS{}
	mi := &file_proto_v1_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_QoS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_QoS) ProtoMessage() {}

func (x *Task_QoS) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_QoS.ProtoReflect.Descriptor instead.
func (*Task_QoS) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Task_QoS) GetPriority() bool {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return false
}

func (x *Task_QoS) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

// Event to terminate a running task on Provider.
type Task_Cancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`         // unique identifier of the task
	Reason        *string                `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"` // freeform reason for logging
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Cancel) Reset() {
	*x = Task_Cancel{}
	mi := &file_proto_v1_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Cancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Cancel) ProtoMessage() {}

func (x *Task_Cancel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Cancel.ProtoReflect.Descriptor instead.
func (*Task_Cancel) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Task_Cancel) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Task_Cancel) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

//	WebAssembly System Interface (WASI), preview1
//
// ===============================================
type Task_Wasip1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1) Reset() {
	*x = Task_Wasip1{}
	mi := &file_proto_v1_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1) ProtoMessage() {}

func (x *Task_Wasip1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1.ProtoReflect.Descriptor instead.
func (*Task_Wasip1) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 3}
}

//	Pyodide Python scripts
//
// ========================
type Task_Pyodide struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide) Reset() {
	*x = Task_Pyodide{}
	mi := &file_proto_v1_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide) ProtoMessage() {}

func (x *Task_Pyodide) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide.ProtoReflect.Descriptor instead.
func (*Task_Pyodide) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 4}
}

// Offload a Wasip1 task.
type Task_Wasip1_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Qos           *Task_QoS              `protobuf:"bytes,2,opt,name=qos" json:"qos,omitempty"`
	Params        *Task_Wasip1_Params    `protobuf:"bytes,3,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Request) Reset() {
	*x = Task_Wasip1_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Request) ProtoMessage() {}

func (x *Task_Wasip1_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Request.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 3, 0}
}

func (x *Task_Wasip1_Request) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Wasip1_Request) GetQos() *Task_QoS {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *Task_Wasip1_Request) GetParams() *Task_Wasip1_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// Contains necessary references and execution arguments to instantiate a single
// WebAssembly task in a WASI preview 1 environment on the Provider.
type Task_Wasip1_Params struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Binary        *File                  `protobuf:"bytes,1,opt,name=binary" json:"binary,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Envs          []string               `protobuf:"bytes,3,rep,name=envs" json:"envs,omitempty"`
	Stdin         []byte                 `protobuf:"bytes,4,opt,name=stdin" json:"stdin,omitempty"`
	Rootfs        *File                  `protobuf:"bytes,5,opt,name=rootfs" json:"rootfs,omitempty"`
	Artifacts     []string               `protobuf:"bytes,6,rep,name=artifacts" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Params) Reset() {
	*x = Task_Wasip1_Params{}
	mi := &file_proto_v1_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Params) ProtoMessage() {}

func (x *Task_Wasip1_Params) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Params.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Params) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 3, 1}
}

func (x *Task_Wasip1_Params) GetBinary() *File {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *Task_Wasip1_Params) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Task_Wasip1_Params) GetEnvs() []string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *Task_Wasip1_Params) GetStdin() []byte {
	if x != nil {
		return x.Stdin
	}
	return nil
}

func (x *Task_Wasip1_Params) GetRootfs() *File {
	if x != nil {
		return x.Rootfs
	}
	return nil
}

func (x *Task_Wasip1_Params) GetArtifacts() []string {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Wrap a Wasip1.Output in a result, which can be an Error or OK.
type Task_Wasip1_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Info  *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*Task_Wasip1_Response_Error
	//	*Task_Wasip1_Response_Ok
	Result        isTask_Wasip1_Response_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Response) Reset() {
	*x = Task_Wasip1_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Response) ProtoMessage() {}

func (x *Task_Wasip1_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Response.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 3, 2}
}

func (x *Task_Wasip1_Response) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Wasip1_Response) GetResult() isTask_Wasip1_Response_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Task_Wasip1_Response) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*Task_Wasip1_Response_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *Task_Wasip1_Response) GetOk() *Task_Wasip1_Output {
	if x != nil {
		if x, ok := x.Result.(*Task_Wasip1_Response_Ok); ok {
			return x.Ok
		}
	}
	return nil
}

type isTask_Wasip1_Response_Result interface {
	isTask_Wasip1_Response_Result()
}

type Task_Wasip1_Response_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,oneof"`
}

type Task_Wasip1_Response_Ok struct {
	Ok *Task_Wasip1_Output `protobuf:"bytes,3,opt,name=ok,oneof"`
}

func (*Task_Wasip1_Response_Error) isTask_Wasip1_Response_Result() {}

func (*Task_Wasip1_Response_Ok) isTask_Wasip1_Response_Result() {}

// The result of an execution from a Wasip1.Params message. It should only be
// returned if the WebAssembly module was instantiated successfully at all.
type Task_Wasip1_Output struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Stdout        []byte                 `protobuf:"bytes,2,opt,name=stdout" json:"stdout,omitempty"`
	Stderr        []byte                 `protobuf:"bytes,3,opt,name=stderr" json:"stderr,omitempty"`
	Artifacts     *File                  `protobuf:"bytes,4,opt,name=artifacts" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Output) Reset() {
	*x = Task_Wasip1_Output{}
	mi := &file_proto_v1_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Output) ProtoMessage() {}

func (x *Task_Wasip1_Output) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Output.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Output) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 3, 3}
}

func (x *Task_Wasip1_Output) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Task_Wasip1_Output) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *Task_Wasip1_Output) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *Task_Wasip1_Output) GetArtifacts() *File {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Offload a Pyodide task.
type Task_Pyodide_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Qos           *Task_QoS              `protobuf:"bytes,2,opt,name=qos" json:"qos,omitempty"`
	Params        *Task_Pyodide_Params   `protobuf:"bytes,3,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Request) Reset() {
	*x = Task_Pyodide_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Request) ProtoMessage() {}

func (x *Task_Pyodide_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Request.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 4, 0}
}

func (x *Task_Pyodide_Request) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Pyodide_Request) GetQos() *Task_QoS {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *Task_Pyodide_Request) GetParams() *Task_Pyodide_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type Task_Pyodide_Params struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        *string                `protobuf:"bytes,1,opt,name=script" json:"script,omitempty"`
	Packages      []string               `protobuf:"bytes,7,rep,name=packages" json:"packages,omitempty"`
	Pickle        []byte                 `protobuf:"bytes,8,opt,name=pickle" json:"pickle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Params) Reset() {
	*x = Task_Pyodide_Params{}
	mi := &file_proto_v1_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Params) ProtoMessage() {}

func (x *Task_Pyodide_Params) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Params.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Params) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 4, 1}
}

func (x *Task_Pyodide_Params) GetScript() string {
	if x != nil && x.Script != nil {
		return *x.Script
	}
	return ""
}

func (x *Task_Pyodide_Params) GetPackages() []string {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *Task_Pyodide_Params) GetPickle() []byte {
	if x != nil {
		return x.Pickle
	}
	return nil
}

// Wrap a Pyodide.Output in a result, which can be an Error or OK.
type Task_Pyodide_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Info  *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*Task_Pyodide_Response_Error
	//	*Task_Pyodide_Response_Ok
	Result        isTask_Pyodide_Response_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Response) Reset() {
	*x = Task_Pyodide_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Response) ProtoMessage() {}

func (x *Task_Pyodide_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Response.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 4, 2}
}

func (x *Task_Pyodide_Response) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Pyodide_Response) GetResult() isTask_Pyodide_Response_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Task_Pyodide_Response) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*Task_Pyodide_Response_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *Task_Pyodide_Response) GetOk() *Task_Pyodide_Output {
	if x != nil {
		if x, ok := x.Result.(*Task_Pyodide_Response_Ok); ok {
			return x.Ok
		}
	}
	return nil
}

type isTask_Pyodide_Response_Result interface {
	isTask_Pyodide_Response_Result()
}

type Task_Pyodide_Response_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,oneof"`
}

type Task_Pyodide_Response_Ok struct {
	Ok *Task_Pyodide_Output `protobuf:"bytes,3,opt,name=ok,oneof"`
}

func (*Task_Pyodide_Response_Error) isTask_Pyodide_Response_Result() {}

func (*Task_Pyodide_Response_Ok) isTask_Pyodide_Response_Result() {}

type Task_Pyodide_Output struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pickle        []byte                 `protobuf:"bytes,1,opt,name=pickle" json:"pickle,omitempty"`
	Stdout        []byte                 `protobuf:"bytes,2,opt,name=stdout" json:"stdout,omitempty"`
	Stderr        []byte                 `protobuf:"bytes,3,opt,name=stderr" json:"stderr,omitempty"`
	Version       *string                `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"` // File artifacts = 4;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Output) Reset() {
	*x = Task_Pyodide_Output{}
	mi := &file_proto_v1_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Output) ProtoMessage() {}

func (x *Task_Pyodide_Output) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Output.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Output) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 4, 3}
}

func (x *Task_Pyodide_Output) GetPickle() []byte {
	if x != nil {
		return x.Pickle
	}
	return nil
}

func (x *Task_Pyodide_Output) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *Task_Pyodide_Output) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *Task_Pyodide_Output) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

// GenericMessage is just a generic piece of text for logging
type Event_GenericMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *string                `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_GenericMessage) Reset() {
	*x = Event_GenericMessage{}
	mi := &file_proto_v1_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_GenericMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_GenericMessage) ProtoMessage() {}

func (x *Event_GenericMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_GenericMessage.ProtoReflect.Descriptor instead.
func (*Event_GenericMessage) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Event_GenericMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// ProviderHello is sent once at the beginning to identify the Provider
type Event_ProviderHello struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`           // a logging-friendly name of the provider
	Useragent     *string                `protobuf:"bytes,2,opt,name=useragent" json:"useragent,omitempty"` // like the navigator.useragent in browser
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_ProviderHello) Reset() {
	*x = Event_ProviderHello{}
	mi := &file_proto_v1_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_ProviderHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ProviderHello) ProtoMessage() {}

func (x *Event_ProviderHello) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ProviderHello.ProtoReflect.Descriptor instead.
func (*Event_ProviderHello) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{11, 1}
}

func (x *Event_ProviderHello) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Event_ProviderHello) GetUseragent() string {
	if x != nil && x.Useragent != nil {
		return *x.Useragent
	}
	return ""
}

// ProviderResources is information about the available resources in Worker pool
type Event_ProviderResources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Concurrency   *uint32                `protobuf:"varint,1,opt,name=concurrency" json:"concurrency,omitempty"` // maximum possible concurrency (~ number of Workers)
	Tasks         *uint32                `protobuf:"varint,2,opt,name=tasks" json:"tasks,omitempty"`             // currently active tasks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_ProviderResources) Reset() {
	*x = Event_ProviderResources{}
	mi := &file_proto_v1_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_ProviderResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ProviderResources) ProtoMessage() {}

func (x *Event_ProviderResources) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ProviderResources.ProtoReflect.Descriptor instead.
func (*Event_ProviderResources) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{11, 2}
}

func (x *Event_ProviderResources) GetConcurrency() uint32 {
	if x != nil && x.Concurrency != nil {
		return *x.Concurrency
	}
	return 0
}

func (x *Event_ProviderResources) GetTasks() uint32 {
	if x != nil && x.Tasks != nil {
		return *x.Tasks
	}
	return 0
}

// ClusterInfo contains information about all connected Providers
type Event_ClusterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Providers     *uint32                `protobuf:"varint,1,opt,name=providers" json:"providers,omitempty"` // number of currently connected providers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_ClusterInfo) Reset() {
	*x = Event_ClusterInfo{}
	mi := &file_proto_v1_messages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ClusterInfo) ProtoMessage() {}

func (x *Event_ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ClusterInfo.ProtoReflect.Descriptor instead.
func (*Event_ClusterInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{11, 3}
}

func (x *Event_ClusterInfo) GetProviders() uint32 {
	if x != nil && x.Providers != nil {
		return *x.Providers
	}
	return 0
}

// Throughput contains information about overall cluster throughput
type Event_Throughput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Overall       *float32               `protobuf:"fixed32,1,opt,name=overall" json:"overall,omitempty"` // current overall tasks/s throughput
	Yours         *float32               `protobuf:"fixed32,2,opt,name=yours" json:"yours,omitempty"`     // your contribution (identified by name)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_Throughput) Reset() {
	*x = Event_Throughput{}
	mi := &file_proto_v1_messages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_Throughput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Throughput) ProtoMessage() {}

func (x *Event_Throughput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Throughput.ProtoReflect.Descriptor instead.
func (*Event_Throughput) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{11, 4}
}

func (x *Event_Throughput) GetOverall() float32 {
	if x != nil && x.Overall != nil {
		return *x.Overall
	}
	return 0
}

func (x *Event_Throughput) GetYours() float32 {
	if x != nil && x.Yours != nil {
		return *x.Yours
	}
	return 0
}

// FileSystemUpdate notifies the Broker about changed files on the Provider.
type Event_FileSystemUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Added         []string               `protobuf:"bytes,1,rep,name=added" json:"added,omitempty"`
	Removed       []string               `protobuf:"bytes,2,rep,name=removed" json:"removed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_FileSystemUpdate) Reset() {
	*x = Event_FileSystemUpdate{}
	mi := &file_proto_v1_messages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_FileSystemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_FileSystemUpdate) ProtoMessage() {}

func (x *Event_FileSystemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_FileSystemUpdate.ProtoReflect.Descriptor instead.
func (*Event_FileSystemUpdate) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{11, 5}
}

func (x *Event_FileSystemUpdate) GetAdded() []string {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *Event_FileSystemUpdate) GetRemoved() []string {
	if x != nil {
		return x.Removed
	}
	return nil
}

// Jobs specify a simple parent-inheritance structure for each task format, so
// multiple similar tasks can be sent efficiently in a single HTTP request.
// There is no magic involved though: anything in the parent gets entirely
// replaced by the corresponding fields in a task specification. Thus, at least
// one task must always be present, even if just an empty { } with all
// parameters inherited from the parent.
type Client_Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client_Job) Reset() {
	*x = Client_Job{}
	mi := &file_proto_v1_messages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client_Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client_Job) ProtoMessage() {}

func (x *Client_Job) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client_Job.ProtoReflect.Descriptor instead.
func (*Client_Job) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{12, 0}
}

type Client_Job_Wasip1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parent        *Task_Wasip1_Params    `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Tasks         []*Task_Wasip1_Params  `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client_Job_Wasip1Request) Reset() {
	*x = Client_Job_Wasip1Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client_Job_Wasip1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client_Job_Wasip1Request) ProtoMessage() {}

func (x *Client_Job_Wasip1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client_Job_Wasip1Request.ProtoReflect.Descriptor instead.
func (*Client_Job_Wasip1Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{12, 0, 0}
}

func (x *Client_Job_Wasip1Request) GetParent() *Task_Wasip1_Params {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Client_Job_Wasip1Request) GetTasks() []*Task_Wasip1_Params {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type Client_Job_Wasip1Response struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Error         *string                 `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Tasks         []*Task_Wasip1_Response `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client_Job_Wasip1Response) Reset() {
	*x = Client_Job_Wasip1Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client_Job_Wasip1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client_Job_Wasip1Response) ProtoMessage() {}

func (x *Client_Job_Wasip1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client_Job_Wasip1Response.ProtoReflect.Descriptor instead.
func (*Client_Job_Wasip1Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{12, 0, 1}
}

func (x *Client_Job_Wasip1Response) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Client_Job_Wasip1Response) GetTasks() []*Task_Wasip1_Response {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type Client_Job_PyodideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parent        *Task_Pyodide_Params   `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	Tasks         []*Task_Pyodide_Params `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client_Job_PyodideRequest) Reset() {
	*x = Client_Job_PyodideRequest{}
	mi := &file_proto_v1_messages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client_Job_PyodideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client_Job_PyodideRequest) ProtoMessage() {}

func (x *Client_Job_PyodideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client_Job_PyodideRequest.ProtoReflect.Descriptor instead.
func (*Client_Job_PyodideRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{12, 0, 2}
}

func (x *Client_Job_PyodideRequest) GetParent() *Task_Pyodide_Params {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Client_Job_PyodideRequest) GetTasks() []*Task_Pyodide_Params {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type Client_Job_PyodideResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Error         *string                  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Tasks         []*Task_Pyodide_Response `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client_Job_PyodideResponse) Reset() {
	*x = Client_Job_PyodideResponse{}
	mi := &file_proto_v1_messages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client_Job_PyodideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client_Job_PyodideResponse) ProtoMessage() {}

func (x *Client_Job_PyodideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client_Job_PyodideResponse.ProtoReflect.Descriptor instead.
func (*Client_Job_PyodideResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{12, 0, 3}
}

func (x *Client_Job_PyodideResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Client_Job_PyodideResponse) GetTasks() []*Task_Pyodide_Response {
	if x != nil {
		return x.Tasks
	}
	return nil
}

var File_proto_v1_messages_proto protoreflect.FileDescriptor

var file_proto_v1_messages_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x77, 0x61, 0x73, 0x69, 0x6d,
	0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69,
	0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x40, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x22, 0xe5, 0x0a, 0x0a, 0x04, 0x54,
	0x61, 0x73, 0x6b, 0x1a, 0x54, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x59, 0x0a, 0x03, 0x51, 0x6f, 0x53,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x08,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x30, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0xf9, 0x04, 0x0a, 0x06, 0x57, 0x61, 0x73, 0x69, 0x70,
	0x31, 0x1a, 0x9b, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61,
	0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a,
	0x03, 0x71, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x61, 0x73,
	0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x51, 0x6f,
	0x53, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0xba, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61, 0x73,
	0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6e, 0x76,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74,
	0x64, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x8f, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x31, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00,
	0x52, 0x02, 0x6f, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x81,
	0x01, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72,
	0x72, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x1a, 0xfd, 0x03, 0x0a, 0x07, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x1a, 0x9c,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d,
	0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x03, 0x71, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x51, 0x6f, 0x53, 0x52, 0x03,
	0x71, 0x6f, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x54, 0x0a,
	0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x69, 0x63, 0x6b, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x69, 0x63,
	0x6b, 0x6c, 0x65, 0x1a, 0x90, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x6b, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x6a, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x13,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x23, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x3e, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61,
	0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x29,
	0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x14, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x22, 0xf2, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x2a, 0x0a, 0x0e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x41, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x4b, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x2b, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3c, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x79, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x79, 0x6f,
	0x75, 0x72, 0x73, 0x1a, 0x42, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0xda, 0x03, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x1a, 0xcf, 0x03, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x1a, 0x7f, 0x0a, 0x0d, 0x57, 0x61,
	0x73, 0x69, 0x70, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61,
	0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57,
	0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x5f, 0x0a, 0x0e, 0x57,
	0x61, 0x73, 0x69, 0x70, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x82, 0x01, 0x0a,
	0x0e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d,
	0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64,
	0x69, 0x64, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x1a, 0x61, 0x0a, 0x0f, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x61, 0x73, 0x69,
	0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f,
	0x64, 0x69, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x5c, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x77, 0x61, 0x73, 0x69, 0x6d,
	0x6f, 0x66, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f,
	0x6a, 0x73, 0x6f, 0x6e, 0x10, 0x02, 0x32, 0xb5, 0x01, 0x0a, 0x08, 0x57, 0x61, 0x73, 0x69, 0x6d,
	0x6f, 0x66, 0x66, 0x12, 0x52, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31,
	0x12, 0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x50, 0x79,
	0x6f, 0x64, 0x69, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d,
	0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64,
	0x69, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1e,
	0x5a, 0x1c, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x3b, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x76, 0x31, 0x62, 0x08,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var (
	file_proto_v1_messages_proto_rawDescOnce sync.Once
	file_proto_v1_messages_proto_rawDescData []byte
)

func file_proto_v1_messages_proto_rawDescGZIP() []byte {
	file_proto_v1_messages_proto_rawDescOnce.Do(func() {
		file_proto_v1_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_messages_proto_rawDesc), len(file_proto_v1_messages_proto_rawDesc)))
	})
	return file_proto_v1_messages_proto_rawDescData
}

var file_proto_v1_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_v1_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_v1_messages_proto_goTypes = []any{
	(Subprotocol)(0),                   // 0: wasimoff.v1.Subprotocol
	(Envelope_MessageType)(0),          // 1: wasimoff.v1.Envelope.MessageType
	(*Envelope)(nil),                   // 2: wasimoff.v1.Envelope
	(*Task)(nil),                       // 3: wasimoff.v1.Task
	(*File)(nil),                       // 4: wasimoff.v1.File
	(*FileListingRequest)(nil),         // 5: wasimoff.v1.FileListingRequest
	(*FileListingResponse)(nil),        // 6: wasimoff.v1.FileListingResponse
	(*FileProbeRequest)(nil),           // 7: wasimoff.v1.FileProbeRequest
	(*FileProbeResponse)(nil),          // 8: wasimoff.v1.FileProbeResponse
	(*FileUploadRequest)(nil),          // 9: wasimoff.v1.FileUploadRequest
	(*FileUploadResponse)(nil),         // 10: wasimoff.v1.FileUploadResponse
	(*FileDownloadRequest)(nil),        // 11: wasimoff.v1.FileDownloadRequest
	(*FileDownloadResponse)(nil),       // 12: wasimoff.v1.FileDownloadResponse
	(*Event)(nil),                      // 13: wasimoff.v1.Event
	(*Client)(nil),                     // 14: wasimoff.v1.Client
	(*JobSpecification)(nil),           // 15: wasimoff.v1.JobSpecification
	(*Task_Metadata)(nil),              // 16: wasimoff.v1.Task.Metadata
	(*Task_QoS)(nil),                   // 17: wasimoff.v1.Task.QoS
	(*Task_Cancel)(nil),                // 18: wasimoff.v1.Task.Cancel
	(*Task_Wasip1)(nil),                // 19: wasimoff.v1.Task.Wasip1
	(*Task_Pyodide)(nil),               // 20: wasimoff.v1.Task.Pyodide
	(*Task_Wasip1_Request)(nil),        // 21: wasimoff.v1.Task.Wasip1.Request
	(*Task_Wasip1_Params)(nil),         // 22: wasimoff.v1.Task.Wasip1.Params
	(*Task_Wasip1_Response)(nil),       // 23: wasimoff.v1.Task.Wasip1.Response
	(*Task_Wasip1_Output)(nil),         // 24: wasimoff.v1.Task.Wasip1.Output
	(*Task_Pyodide_Request)(nil),       // 25: wasimoff.v1.Task.Pyodide.Request
	(*Task_Pyodide_Params)(nil),        // 26: wasimoff.v1.Task.Pyodide.Params
	(*Task_Pyodide_Response)(nil),      // 27: wasimoff.v1.Task.Pyodide.Response
	(*Task_Pyodide_Output)(nil),        // 28: wasimoff.v1.Task.Pyodide.Output
	(*Event_GenericMessage)(nil),       // 29: wasimoff.v1.Event.GenericMessage
	(*Event_ProviderHello)(nil),        // 30: wasimoff.v1.Event.ProviderHello
	(*Event_ProviderResources)(nil),    // 31: wasimoff.v1.Event.ProviderResources
	(*Event_ClusterInfo)(nil),          // 32: wasimoff.v1.Event.ClusterInfo
	(*Event_Throughput)(nil),           // 33: wasimoff.v1.Event.Throughput
	(*Event_FileSystemUpdate)(nil),     // 34: wasimoff.v1.Event.FileSystemUpdate
	(*Client_Job)(nil),                 // 35: wasimoff.v1.Client.Job
	(*Client_Job_Wasip1Request)(nil),   // 36: wasimoff.v1.Client.Job.Wasip1Request
	(*Client_Job_Wasip1Response)(nil),  // 37: wasimoff.v1.Client.Job.Wasip1Response
	(*Client_Job_PyodideRequest)(nil),  // 38: wasimoff.v1.Client.Job.PyodideRequest
	(*Client_Job_PyodideResponse)(nil), // 39: wasimoff.v1.Client.Job.PyodideResponse
	(*anypb.Any)(nil),                  // 40: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),      // 41: google.protobuf.Timestamp
}
var file_proto_v1_messages_proto_depIdxs = []int32{
	1,  // 0: wasimoff.v1.Envelope.type:type_name -> wasimoff.v1.Envelope.MessageType
	40, // 1: wasimoff.v1.Envelope.payload:type_name -> google.protobuf.Any
	4,  // 2: wasimoff.v1.FileUploadRequest.upload:type_name -> wasimoff.v1.File
	4,  // 3: wasimoff.v1.FileDownloadResponse.download:type_name -> wasimoff.v1.File
	41, // 4: wasimoff.v1.Task.QoS.deadline:type_name -> google.protobuf.Timestamp
	16, // 5: wasimoff.v1.Task.Wasip1.Request.info:type_name -> wasimoff.v1.Task.Metadata
	17, // 6: wasimoff.v1.Task.Wasip1.Request.qos:type_name -> wasimoff.v1.Task.QoS
	22, // 7: wasimoff.v1.Task.Wasip1.Request.params:type_name -> wasimoff.v1.Task.Wasip1.Params
	4,  // 8: wasimoff.v1.Task.Wasip1.Params.binary:type_name -> wasimoff.v1.File
	4,  // 9: wasimoff.v1.Task.Wasip1.Params.rootfs:type_name -> wasimoff.v1.File
	16, // 10: wasimoff.v1.Task.Wasip1.Response.info:type_name -> wasimoff.v1.Task.Metadata
	24, // 11: wasimoff.v1.Task.Wasip1.Response.ok:type_name -> wasimoff.v1.Task.Wasip1.Output
	4,  // 12: wasimoff.v1.Task.Wasip1.Output.artifacts:type_name -> wasimoff.v1.File
	16, // 13: wasimoff.v1.Task.Pyodide.Request.info:type_name -> wasimoff.v1.Task.Metadata
	17, // 14: wasimoff.v1.Task.Pyodide.Request.qos:type_name -> wasimoff.v1.Task.QoS
	26, // 15: wasimoff.v1.Task.Pyodide.Request.params:type_name -> wasimoff.v1.Task.Pyodide.Params
	16, // 16: wasimoff.v1.Task.Pyodide.Response.info:type_name -> wasimoff.v1.Task.Metadata
	28, // 17: wasimoff.v1.Task.Pyodide.Response.ok:type_name -> wasimoff.v1.Task.Pyodide.Output
	22, // 18: wasimoff.v1.Client.Job.Wasip1Request.parent:type_name -> wasimoff.v1.Task.Wasip1.Params
	22, // 19: wasimoff.v1.Client.Job.Wasip1Request.tasks:type_name -> wasimoff.v1.Task.Wasip1.Params
	23, // 20: wasimoff.v1.Client.Job.Wasip1Response.tasks:type_name -> wasimoff.v1.Task.Wasip1.Response
	26, // 21: wasimoff.v1.Client.Job.PyodideRequest.parent:type_name -> wasimoff.v1.Task.Pyodide.Params
	26, // 22: wasimoff.v1.Client.Job.PyodideRequest.tasks:type_name -> wasimoff.v1.Task.Pyodide.Params
	27, // 23: wasimoff.v1.Client.Job.PyodideResponse.tasks:type_name -> wasimoff.v1.Task.Pyodide.Response
	21, // 24: wasimoff.v1.Wasimoff.RunWasip1:input_type -> wasimoff.v1.Task.Wasip1.Request
	25, // 25: wasimoff.v1.Wasimoff.RunPyodide:input_type -> wasimoff.v1.Task.Pyodide.Request
	23, // 26: wasimoff.v1.Wasimoff.RunWasip1:output_type -> wasimoff.v1.Task.Wasip1.Response
	27, // 27: wasimoff.v1.Wasimoff.RunPyodide:output_type -> wasimoff.v1.Task.Pyodide.Response
	26, // [26:28] is the sub-list for method output_type
	24, // [24:26] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_proto_v1_messages_proto_init() }
func file_proto_v1_messages_proto_init() {
	if File_proto_v1_messages_proto != nil {
		return
	}
	file_proto_v1_messages_proto_msgTypes[21].OneofWrappers = []any{
		(*Task_Wasip1_Response_Error)(nil),
		(*Task_Wasip1_Response_Ok)(nil),
	}
	file_proto_v1_messages_proto_msgTypes[25].OneofWrappers = []any{
		(*Task_Pyodide_Response_Error)(nil),
		(*Task_Pyodide_Response_Ok)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_messages_proto_rawDesc), len(file_proto_v1_messages_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_messages_proto_goTypes,
		DependencyIndexes: file_proto_v1_messages_proto_depIdxs,
		EnumInfos:         file_proto_v1_messages_proto_enumTypes,
		MessageInfos:      file_proto_v1_messages_proto_msgTypes,
	}.Build()
	File_proto_v1_messages_proto = out.File
	file_proto_v1_messages_proto_goTypes = nil
	file_proto_v1_messages_proto_depIdxs = nil
}
