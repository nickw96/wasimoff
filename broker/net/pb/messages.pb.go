// best practices: https://protobuf.dev/programming-guides/dos-donts/

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: messages.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Subprotocol is used to identify the concrete encoding on the wire.
type Subprotocol int32

const (
	Subprotocol_UNKNOWN                       Subprotocol = 0
	Subprotocol_wasimoff_provider_v1_protobuf Subprotocol = 1 // binary messages with Protobuf encoding
	Subprotocol_wasimoff_provider_v1_json     Subprotocol = 2 // text messages with JSON encoding
)

// Enum value maps for Subprotocol.
var (
	Subprotocol_name = map[int32]string{
		0: "UNKNOWN",
		1: "wasimoff_provider_v1_protobuf",
		2: "wasimoff_provider_v1_json",
	}
	Subprotocol_value = map[string]int32{
		"UNKNOWN":                       0,
		"wasimoff_provider_v1_protobuf": 1,
		"wasimoff_provider_v1_json":     2,
	}
)

func (x Subprotocol) Enum() *Subprotocol {
	p := new(Subprotocol)
	*p = x
	return p
}

func (x Subprotocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subprotocol) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (Subprotocol) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x Subprotocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subprotocol.Descriptor instead.
func (Subprotocol) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type Envelope_MessageType int32

const (
	Envelope_UNKNOWN  Envelope_MessageType = 0
	Envelope_Request  Envelope_MessageType = 1
	Envelope_Response Envelope_MessageType = 2
	Envelope_Event    Envelope_MessageType = 3
)

// Enum value maps for Envelope_MessageType.
var (
	Envelope_MessageType_name = map[int32]string{
		0: "UNKNOWN",
		1: "Request",
		2: "Response",
		3: "Event",
	}
	Envelope_MessageType_value = map[string]int32{
		"UNKNOWN":  0,
		"Request":  1,
		"Response": 2,
		"Event":    3,
	}
)

func (x Envelope_MessageType) Enum() *Envelope_MessageType {
	p := new(Envelope_MessageType)
	*p = x
	return p
}

func (x Envelope_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Envelope_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (Envelope_MessageType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x Envelope_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Envelope_MessageType.Descriptor instead.
func (Envelope_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0, 0}
}

type Ping_Direction int32

const (
	Ping_Ping Ping_Direction = 0
	Ping_Pong Ping_Direction = 1
)

// Enum value maps for Ping_Direction.
var (
	Ping_Direction_name = map[int32]string{
		0: "Ping",
		1: "Pong",
	}
	Ping_Direction_value = map[string]int32{
		"Ping": 0,
		"Pong": 1,
	}
)

func (x Ping_Direction) Enum() *Ping_Direction {
	p := new(Ping_Direction)
	*p = x
	return p
}

func (x Ping_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ping_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[2].Descriptor()
}

func (Ping_Direction) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[2]
}

func (x Ping_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ping_Direction.Descriptor instead.
func (Ping_Direction) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1, 0}
}

// Envelope is a generic message wrapper with a sequence counter and message type.
// The payload contains a { Request, Response, Event }.
type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The sequence number is incremented for each message but Request and Event
	// count independently. Responses must always reuse the Request's sequence
	// number so they can be routed to the caller correctly.
	Sequence *uint64 `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	// The message type indicates the payload contents: { Request, Response, Event }.
	Type *Envelope_MessageType `protobuf:"varint,2,opt,name=type,enum=Envelope_MessageType" json:"type,omitempty"`
	// The presence of an error indicates that something went wrong with the call
	// in general (like a server "oops"). Otherwise, the called function should
	// encode specific errors within the payload.
	Error *string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	// The payload itself. Needs to be (un)packed with `anypb`.
	Payload       *anypb.Any `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetSequence() uint64 {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return 0
}

func (x *Envelope) GetType() Envelope_MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Envelope_UNKNOWN
}

func (x *Envelope) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Envelope) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Ping stub, if the transport does not provide them. WebSocket does have its
// own mechanism. On WebTransport, you should use a separate stream to avoid re-
// introducing head-of-line blocking with the other RPC requests.
type Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Direction     *Ping_Direction        `protobuf:"varint,1,opt,name=direction,enum=Ping_Direction" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Ping) GetDirection() Ping_Direction {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return Ping_Ping
}

// ExecuteWasi runs a webassembly/wasi binary on the Provider
type ExecuteWasiRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *TaskMetadata          `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"` // metadata about this task
	Task          *WasiTaskArgs          `protobuf:"bytes,2,opt,name=task" json:"task,omitempty"` // arguments for the WebAssembly module
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteWasiRequest) Reset() {
	*x = ExecuteWasiRequest{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteWasiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteWasiRequest) ProtoMessage() {}

func (x *ExecuteWasiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteWasiRequest.ProtoReflect.Descriptor instead.
func (*ExecuteWasiRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteWasiRequest) GetInfo() *TaskMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ExecuteWasiRequest) GetTask() *WasiTaskArgs {
	if x != nil {
		return x.Task
	}
	return nil
}

type ExecuteWasiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *string                `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`   // error leading up to the instantiation
	Result        *WasiTaskResult        `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"` // result of the execution
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteWasiResponse) Reset() {
	*x = ExecuteWasiResponse{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteWasiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteWasiResponse) ProtoMessage() {}

func (x *ExecuteWasiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteWasiResponse.ProtoReflect.Descriptor instead.
func (*ExecuteWasiResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ExecuteWasiResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *ExecuteWasiResponse) GetResult() *WasiTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// TaskMetadata contains some information about the originating job request.
type TaskMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobID         *string                `protobuf:"bytes,1,opt,name=jobID" json:"jobID,omitempty"`   // overall job ID
	Index         *uint64                `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`  // index within a job with multiple tasks
	Client        *string                `protobuf:"bytes,2,opt,name=client" json:"client,omitempty"` // info about the requesting client
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMetadata) Reset() {
	*x = TaskMetadata{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetadata) ProtoMessage() {}

func (x *TaskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetadata.ProtoReflect.Descriptor instead.
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *TaskMetadata) GetJobID() string {
	if x != nil && x.JobID != nil {
		return *x.JobID
	}
	return ""
}

func (x *TaskMetadata) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *TaskMetadata) GetClient() string {
	if x != nil && x.Client != nil {
		return *x.Client
	}
	return ""
}

// WasiTaskArgs should not be sent as a toplevel message directly and instead
// contains necessary references and execution arguments to instantiate a single
// WebAssembly task on the Provider.
type WasiTaskArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Binary        *File                  `protobuf:"bytes,1,opt,name=binary" json:"binary,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Envs          []string               `protobuf:"bytes,3,rep,name=envs" json:"envs,omitempty"`
	Stdin         []byte                 `protobuf:"bytes,4,opt,name=stdin" json:"stdin,omitempty"`
	Rootfs        *File                  `protobuf:"bytes,5,opt,name=rootfs" json:"rootfs,omitempty"`
	Artifacts     []string               `protobuf:"bytes,6,rep,name=artifacts" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WasiTaskArgs) Reset() {
	*x = WasiTaskArgs{}
	mi := &file_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WasiTaskArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasiTaskArgs) ProtoMessage() {}

func (x *WasiTaskArgs) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasiTaskArgs.ProtoReflect.Descriptor instead.
func (*WasiTaskArgs) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *WasiTaskArgs) GetBinary() *File {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *WasiTaskArgs) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *WasiTaskArgs) GetEnvs() []string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *WasiTaskArgs) GetStdin() []byte {
	if x != nil {
		return x.Stdin
	}
	return nil
}

func (x *WasiTaskArgs) GetRootfs() *File {
	if x != nil {
		return x.Rootfs
	}
	return nil
}

func (x *WasiTaskArgs) GetArtifacts() []string {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// WasiTaskResult is the result of an execution from a WasiTaskArgs. It should
// only be returned if the module was instantiated successfully at all, i.e. any
// errors leading up to that should be returned higher up.
type WasiTaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Stdout        []byte                 `protobuf:"bytes,2,opt,name=stdout" json:"stdout,omitempty"`
	Stderr        []byte                 `protobuf:"bytes,3,opt,name=stderr" json:"stderr,omitempty"`
	Artifacts     *File                  `protobuf:"bytes,4,opt,name=artifacts" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WasiTaskResult) Reset() {
	*x = WasiTaskResult{}
	mi := &file_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WasiTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasiTaskResult) ProtoMessage() {}

func (x *WasiTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasiTaskResult.ProtoReflect.Descriptor instead.
func (*WasiTaskResult) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *WasiTaskResult) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *WasiTaskResult) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *WasiTaskResult) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *WasiTaskResult) GetArtifacts() *File {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// File is a file reference with optional mime-type. The ref could be a plain
// filename, a prefixed hash digest or a URL to fetch from. When stored, a hash
// digest should be computed to have a stable identifier.
type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ref           *string                `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`     // filename, encoded digest or URL
	Media         *string                `protobuf:"bytes,2,opt,name=media" json:"media,omitempty"` // media type in MIME notation
	Blob          []byte                 `protobuf:"bytes,3,opt,name=blob" json:"blob,omitempty"`   // the actual file contents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *File) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *File) GetMedia() string {
	if x != nil && x.Media != nil {
		return *x.Media
	}
	return ""
}

func (x *File) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

// FileListing asks for a listing of all available files on Provider
type FileListingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListingRequest) Reset() {
	*x = FileListingRequest{}
	mi := &file_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListingRequest) ProtoMessage() {}

func (x *FileListingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListingRequest.ProtoReflect.Descriptor instead.
func (*FileListingRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

type FileListingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []string               `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListingResponse) Reset() {
	*x = FileListingResponse{}
	mi := &file_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListingResponse) ProtoMessage() {}

func (x *FileListingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListingResponse.ProtoReflect.Descriptor instead.
func (*FileListingResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *FileListingResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

// FileProbe checks if a certain file exists on provider
type FileProbeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *string                `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileProbeRequest) Reset() {
	*x = FileProbeRequest{}
	mi := &file_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProbeRequest) ProtoMessage() {}

func (x *FileProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProbeRequest.ProtoReflect.Descriptor instead.
func (*FileProbeRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *FileProbeRequest) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

type FileProbeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            *bool                  `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileProbeResponse) Reset() {
	*x = FileProbeResponse{}
	mi := &file_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProbeResponse) ProtoMessage() {}

func (x *FileProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProbeResponse.ProtoReflect.Descriptor instead.
func (*FileProbeResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *FileProbeResponse) GetOk() bool {
	if x != nil && x.Ok != nil {
		return *x.Ok
	}
	return false
}

// FileUpload pushes a file to the Provider.
type FileUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upload        *File                  `protobuf:"bytes,1,opt,name=upload" json:"upload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadRequest) Reset() {
	*x = FileUploadRequest{}
	mi := &file_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRequest) ProtoMessage() {}

func (x *FileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRequest.ProtoReflect.Descriptor instead.
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *FileUploadRequest) GetUpload() *File {
	if x != nil {
		return x.Upload
	}
	return nil
}

type FileUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Err           *string                `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadResponse) Reset() {
	*x = FileUploadResponse{}
	mi := &file_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadResponse) ProtoMessage() {}

func (x *FileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadResponse.ProtoReflect.Descriptor instead.
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *FileUploadResponse) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

// FileDownload can be sent by the Provider to request a file download.
type FileDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *string                `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *FileDownloadRequest) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

type FileDownloadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Download      *File                  `protobuf:"bytes,1,opt,name=download" json:"download,omitempty"`
	Err           *string                `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadResponse) Reset() {
	*x = FileDownloadResponse{}
	mi := &file_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadResponse) ProtoMessage() {}

func (x *FileDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadResponse.ProtoReflect.Descriptor instead.
func (*FileDownloadResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *FileDownloadResponse) GetDownload() *File {
	if x != nil {
		return x.Download
	}
	return nil
}

func (x *FileDownloadResponse) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

// Generic is just a generic piece of text for debugging
type GenericEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *string                `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericEvent) Reset() {
	*x = GenericEvent{}
	mi := &file_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericEvent) ProtoMessage() {}

func (x *GenericEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericEvent.ProtoReflect.Descriptor instead.
func (*GenericEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *GenericEvent) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// ProviderHello is sent once at the beginning to identify the Provider
type ProviderHello struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`           // a logging-friendly name of the provider
	Useragent     *string                `protobuf:"bytes,2,opt,name=useragent" json:"useragent,omitempty"` // like the navigator.useragent in browser
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderHello) Reset() {
	*x = ProviderHello{}
	mi := &file_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderHello) ProtoMessage() {}

func (x *ProviderHello) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderHello.ProtoReflect.Descriptor instead.
func (*ProviderHello) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *ProviderHello) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProviderHello) GetUseragent() string {
	if x != nil && x.Useragent != nil {
		return *x.Useragent
	}
	return ""
}

// ProviderResources is information about the available resources in Worker pool
type ProviderResources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Concurrency   *uint32                `protobuf:"varint,1,opt,name=concurrency" json:"concurrency,omitempty"` // maximum possible concurrency (~ number of Workers)
	Tasks         *uint32                `protobuf:"varint,2,opt,name=tasks" json:"tasks,omitempty"`             // currently active tasks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderResources) Reset() {
	*x = ProviderResources{}
	mi := &file_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderResources) ProtoMessage() {}

func (x *ProviderResources) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderResources.ProtoReflect.Descriptor instead.
func (*ProviderResources) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *ProviderResources) GetConcurrency() uint32 {
	if x != nil && x.Concurrency != nil {
		return *x.Concurrency
	}
	return 0
}

func (x *ProviderResources) GetTasks() uint32 {
	if x != nil && x.Tasks != nil {
		return *x.Tasks
	}
	return 0
}

// ClusterInfo contains information about all connected Providers
type ClusterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Providers     *uint32                `protobuf:"varint,1,opt,name=providers" json:"providers,omitempty"` // number of currently connected providers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	mi := &file_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *ClusterInfo) GetProviders() uint32 {
	if x != nil && x.Providers != nil {
		return *x.Providers
	}
	return 0
}

// Throughput contains information about overall cluster throughput
type Throughput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Overall       *float32               `protobuf:"fixed32,1,opt,name=overall" json:"overall,omitempty"` // current overall tasks/s throughput
	Yours         *float32               `protobuf:"fixed32,2,opt,name=yours" json:"yours,omitempty"`     // your contribution (identified by name)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Throughput) Reset() {
	*x = Throughput{}
	mi := &file_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Throughput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Throughput) ProtoMessage() {}

func (x *Throughput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Throughput.ProtoReflect.Descriptor instead.
func (*Throughput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

func (x *Throughput) GetOverall() float32 {
	if x != nil && x.Overall != nil {
		return *x.Overall
	}
	return 0
}

func (x *Throughput) GetYours() float32 {
	if x != nil && x.Yours != nil {
		return *x.Yours
	}
	return 0
}

// CancelTask tells the Provider that it can terminate a task
type CancelTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *TaskMetadata          `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Reason        *string                `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTask) Reset() {
	*x = CancelTask{}
	mi := &file_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTask) ProtoMessage() {}

func (x *CancelTask) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTask.ProtoReflect.Descriptor instead.
func (*CancelTask) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *CancelTask) GetInfo() *TaskMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *CancelTask) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

// FileSystemUpdate notifies the Broker about changed files on the Provider.
type FileSystemUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Added         []string               `protobuf:"bytes,1,rep,name=added" json:"added,omitempty"`
	Removed       []string               `protobuf:"bytes,2,rep,name=removed" json:"removed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileSystemUpdate) Reset() {
	*x = FileSystemUpdate{}
	mi := &file_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileSystemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystemUpdate) ProtoMessage() {}

func (x *FileSystemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystemUpdate.ProtoReflect.Descriptor instead.
func (*FileSystemUpdate) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{22}
}

func (x *FileSystemUpdate) GetAdded() []string {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *FileSystemUpdate) GetRemoved() []string {
	if x != nil {
		return x.Removed
	}
	return nil
}

// The client upload is a POST request with the binary data as the body, media
// type in the Contet-Type header and the optional friendly name in a query
// parameter. So this message type isn't actually used anywhere yet.
type ClientUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`   // friendly name for lookup
	Media         *string                `protobuf:"bytes,2,opt,name=media" json:"media,omitempty"` // media type
	Body          []byte                 `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`   // binary file contents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientUploadRequest) Reset() {
	*x = ClientUploadRequest{}
	mi := &file_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUploadRequest) ProtoMessage() {}

func (x *ClientUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUploadRequest.ProtoReflect.Descriptor instead.
func (*ClientUploadRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{23}
}

func (x *ClientUploadRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ClientUploadRequest) GetMedia() string {
	if x != nil && x.Media != nil {
		return *x.Media
	}
	return ""
}

func (x *ClientUploadRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ClientUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ref           *string                `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"` // the hashed ref the file was stored under
	Err           *string                `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"` // any errors during file insertion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientUploadResponse) Reset() {
	*x = ClientUploadResponse{}
	mi := &file_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUploadResponse) ProtoMessage() {}

func (x *ClientUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUploadResponse.ProtoReflect.Descriptor instead.
func (*ClientUploadResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{24}
}

func (x *ClientUploadResponse) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *ClientUploadResponse) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

// An offloading request specifies a list of WasiTaskArgs, each possibly
// containing a binary to use, args, envs etc. An optional common parent can
// be given to fill values in tasks. There is no magic in the parameter
// inheritance though: anything in the parent gets entirely replaced by the
// corresponding field in a task spec. At least one task must always be present,
// even if just an empty { } with all parameters inherited from the parent.
type OffloadWasiJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parent        *WasiTaskArgs          `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"` // inherit common task parameters
	Tasks         []*WasiTaskArgs        `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`   // list of task arguments
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffloadWasiJobRequest) Reset() {
	*x = OffloadWasiJobRequest{}
	mi := &file_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffloadWasiJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffloadWasiJobRequest) ProtoMessage() {}

func (x *OffloadWasiJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffloadWasiJobRequest.ProtoReflect.Descriptor instead.
func (*OffloadWasiJobRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{25}
}

func (x *OffloadWasiJobRequest) GetParent() *WasiTaskArgs {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *OffloadWasiJobRequest) GetTasks() []*WasiTaskArgs {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type OffloadWasiJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Failure       *string                `protobuf:"bytes,1,opt,name=failure" json:"failure,omitempty"` // the complete job failed
	Tasks         []*ExecuteWasiResponse `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`     // list of task results
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffloadWasiJobResponse) Reset() {
	*x = OffloadWasiJobResponse{}
	mi := &file_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffloadWasiJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffloadWasiJobResponse) ProtoMessage() {}

func (x *OffloadWasiJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffloadWasiJobResponse.ProtoReflect.Descriptor instead.
func (*OffloadWasiJobResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{26}
}

func (x *OffloadWasiJobResponse) GetFailure() string {
	if x != nil && x.Failure != nil {
		return *x.Failure
	}
	return ""
}

func (x *OffloadWasiJobResponse) GetTasks() []*ExecuteWasiResponse {
	if x != nil {
		return x.Tasks
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x08,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x40, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x22, 0x56, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x2d, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1f,
	0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x10, 0x01, 0x22,
	0x5a, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x57, 0x61, 0x73, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x54, 0x0a, 0x13, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x57, 0x61, 0x73, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x52, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x57, 0x61, 0x73, 0x69, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6e, 0x76,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74,
	0x64, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74,
	0x66, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x22, 0x7d, 0x0a, 0x0e, 0x57, 0x61, 0x73, 0x69, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x23, 0x0a, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x22,
	0x42, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62,
	0x6c, 0x6f, 0x62, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x13, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x23,
	0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x6f, 0x6b, 0x22, 0x32, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22,
	0x29, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x4b, 0x0a, 0x14, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x28, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x41, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x22, 0x2b, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x3c,
	0x0a, 0x0a, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x79, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x47, 0x0a, 0x0a,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x3a,
	0x0a, 0x14, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x63, 0x0a, 0x15, 0x4f, 0x66,
	0x66, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x61, 0x73, 0x69, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x57, 0x61, 0x73, 0x69,
	0x54, 0x61, 0x73, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22,
	0x5e, 0x0a, 0x16, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x61, 0x73, 0x69, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x57, 0x61, 0x73, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2a,
	0x5c, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x77,
	0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x76, 0x31, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x10, 0x01, 0x12, 0x1d,
	0x0a, 0x19, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x10, 0x02, 0x62, 0x08, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_messages_proto_goTypes = []any{
	(Subprotocol)(0),               // 0: Subprotocol
	(Envelope_MessageType)(0),      // 1: Envelope.MessageType
	(Ping_Direction)(0),            // 2: Ping.Direction
	(*Envelope)(nil),               // 3: Envelope
	(*Ping)(nil),                   // 4: Ping
	(*ExecuteWasiRequest)(nil),     // 5: ExecuteWasiRequest
	(*ExecuteWasiResponse)(nil),    // 6: ExecuteWasiResponse
	(*TaskMetadata)(nil),           // 7: TaskMetadata
	(*WasiTaskArgs)(nil),           // 8: WasiTaskArgs
	(*WasiTaskResult)(nil),         // 9: WasiTaskResult
	(*File)(nil),                   // 10: File
	(*FileListingRequest)(nil),     // 11: FileListingRequest
	(*FileListingResponse)(nil),    // 12: FileListingResponse
	(*FileProbeRequest)(nil),       // 13: FileProbeRequest
	(*FileProbeResponse)(nil),      // 14: FileProbeResponse
	(*FileUploadRequest)(nil),      // 15: FileUploadRequest
	(*FileUploadResponse)(nil),     // 16: FileUploadResponse
	(*FileDownloadRequest)(nil),    // 17: FileDownloadRequest
	(*FileDownloadResponse)(nil),   // 18: FileDownloadResponse
	(*GenericEvent)(nil),           // 19: GenericEvent
	(*ProviderHello)(nil),          // 20: ProviderHello
	(*ProviderResources)(nil),      // 21: ProviderResources
	(*ClusterInfo)(nil),            // 22: ClusterInfo
	(*Throughput)(nil),             // 23: Throughput
	(*CancelTask)(nil),             // 24: CancelTask
	(*FileSystemUpdate)(nil),       // 25: FileSystemUpdate
	(*ClientUploadRequest)(nil),    // 26: ClientUploadRequest
	(*ClientUploadResponse)(nil),   // 27: ClientUploadResponse
	(*OffloadWasiJobRequest)(nil),  // 28: OffloadWasiJobRequest
	(*OffloadWasiJobResponse)(nil), // 29: OffloadWasiJobResponse
	(*anypb.Any)(nil),              // 30: google.protobuf.Any
}
var file_messages_proto_depIdxs = []int32{
	1,  // 0: Envelope.type:type_name -> Envelope.MessageType
	30, // 1: Envelope.payload:type_name -> google.protobuf.Any
	2,  // 2: Ping.direction:type_name -> Ping.Direction
	7,  // 3: ExecuteWasiRequest.info:type_name -> TaskMetadata
	8,  // 4: ExecuteWasiRequest.task:type_name -> WasiTaskArgs
	9,  // 5: ExecuteWasiResponse.result:type_name -> WasiTaskResult
	10, // 6: WasiTaskArgs.binary:type_name -> File
	10, // 7: WasiTaskArgs.rootfs:type_name -> File
	10, // 8: WasiTaskResult.artifacts:type_name -> File
	10, // 9: FileUploadRequest.upload:type_name -> File
	10, // 10: FileDownloadResponse.download:type_name -> File
	7,  // 11: CancelTask.info:type_name -> TaskMetadata
	8,  // 12: OffloadWasiJobRequest.parent:type_name -> WasiTaskArgs
	8,  // 13: OffloadWasiJobRequest.tasks:type_name -> WasiTaskArgs
	6,  // 14: OffloadWasiJobResponse.tasks:type_name -> ExecuteWasiResponse
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
