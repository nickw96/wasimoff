// best practices: https://protobuf.dev/programming-guides/dos-donts/

// @generated by protoc-gen-es v2.0.0 with parameter "target=ts,json_types=true"
// @generated from file messages.proto (edition 2023)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any, AnyJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file messages.proto.
 */
export const file_messages: GenFile = /*@__PURE__*/
  fileDesc("Cg5tZXNzYWdlcy5wcm90byK5AQoIRW52ZWxvcGUSEAoIc2VxdWVuY2UYASABKAQSIwoEdHlwZRgCIAEoDjIVLkVudmVsb3BlLk1lc3NhZ2VUeXBlEg0KBWVycm9yGAMgASgJEiUKB3BheWxvYWQYBCABKAsyFC5nb29nbGUucHJvdG9idWYuQW55IkAKC01lc3NhZ2VUeXBlEgsKB1VOS05PV04QABILCgdSZXF1ZXN0EAESDAoIUmVzcG9uc2UQAhIJCgVFdmVudBADIvcGCgRUYXNrGjsKCE1ldGFkYXRhEgoKAmlkGAEgASgJEhEKCXJlcXVlc3RlchgCIAEoCRIQCghwcm92aWRlchgDIAEoCRpFCgNRb1MSEAoIcHJpb3JpdHkYASABKAgSLAoIZGVhZGxpbmUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGiQKBkNhbmNlbBIKCgJpZBgBIAEoCRIOCgZyZWFzb24YAiABKAkaowEKB1JlcXVlc3QSHAoEaW5mbxgBIAEoCzIOLlRhc2suTWV0YWRhdGESFgoDcW9zGAIgASgLMgkuVGFzay5Rb1MSJQoGd2FzaXAxGAogASgLMhMuVGFzay5XYXNpcDEuUGFyYW1zSAASJwoHcHlvZGlkZRgLIAEoCzIULlRhc2suUHlvZGlkZS5QYXJhbXNIAEIMCgpwYXJhbWV0ZXJzSgQIAxAKGpkBCghSZXNwb25zZRIcCgRpbmZvGAEgASgLMg4uVGFzay5NZXRhZGF0YRIPCgVlcnJvchgCIAEoCUgAEiUKBndhc2lwMRgKIAEoCzITLlRhc2suV2FzaXAxLlJlc3VsdEgAEicKB3B5b2RpZGUYCyABKAsyFC5UYXNrLlB5b2RpZGUuUmVzdWx0SABCCAoGcmVzdWx0SgQIAxAKGpoCCgZXYXNpcDEadAoGUGFyYW1zEhUKBmJpbmFyeRgBIAEoCzIFLkZpbGUSDAoEYXJncxgCIAMoCRIMCgRlbnZzGAMgAygJEg0KBXN0ZGluGAQgASgMEhUKBnJvb3RmcxgFIAEoCzIFLkZpbGUSEQoJYXJ0aWZhY3RzGAYgAygJGlIKBk91dHB1dBIOCgZzdGF0dXMYASABKAUSDgoGc3Rkb3V0GAIgASgMEg4KBnN0ZGVychgDIAEoDBIYCglhcnRpZmFjdHMYBCABKAsyBS5GaWxlGkYKBlJlc3VsdBIPCgVlcnJvchgBIAEoCUgAEiEKAm9rGAIgASgLMhMuVGFzay5XYXNpcDEuT3V0cHV0SABCCAoGcmVzdWx0GmYKB1B5b2RpZGUaCAoGUGFyYW1zGggKBk91dHB1dBpHCgZSZXN1bHQSDwoFZXJyb3IYASABKAlIABIiCgJvaxgCIAEoCzIULlRhc2suUHlvZGlkZS5PdXRwdXRIAEIICgZyZXN1bHQiMAoERmlsZRILCgNyZWYYASABKAkSDQoFbWVkaWEYAiABKAkSDAoEYmxvYhgDIAEoDCIUChJGaWxlTGlzdGluZ1JlcXVlc3QiJAoTRmlsZUxpc3RpbmdSZXNwb25zZRINCgVmaWxlcxgBIAMoCSIgChBGaWxlUHJvYmVSZXF1ZXN0EgwKBGZpbGUYASABKAkiHwoRRmlsZVByb2JlUmVzcG9uc2USCgoCb2sYASABKAgiKgoRRmlsZVVwbG9hZFJlcXVlc3QSFQoGdXBsb2FkGAEgASgLMgUuRmlsZSIhChJGaWxlVXBsb2FkUmVzcG9uc2USCwoDZXJyGAEgASgJIiMKE0ZpbGVEb3dubG9hZFJlcXVlc3QSDAoEZmlsZRgBIAEoCSI8ChRGaWxlRG93bmxvYWRSZXNwb25zZRIXCghkb3dubG9hZBgBIAEoCzIFLkZpbGUSCwoDZXJyGAIgASgJIsMCCgVFdmVudBohCg5HZW5lcmljTWVzc2FnZRIPCgdtZXNzYWdlGAEgASgJGjAKDVByb3ZpZGVySGVsbG8SDAoEbmFtZRgBIAEoCRIRCgl1c2VyYWdlbnQYAiABKAkaNwoRUHJvdmlkZXJSZXNvdXJjZXMSEwoLY29uY3VycmVuY3kYASABKA0SDQoFdGFza3MYAiABKA0aIAoLQ2x1c3RlckluZm8SEQoJcHJvdmlkZXJzGAEgASgNGiwKClRocm91Z2hwdXQSDwoHb3ZlcmFsbBgBIAEoAhINCgV5b3VycxgCIAEoAhooCgpDYW5jZWxUYXNrEgoKAmlkGAEgASgJEg4KBnJlYXNvbhgCIAEoCRoyChBGaWxlU3lzdGVtVXBkYXRlEg0KBWFkZGVkGAEgAygJEg8KB3JlbW92ZWQYAiADKAki0wIKBkNsaWVudBrIAgoDSm9iGlgKDVdhc2lwMVJlcXVlc3QSIwoGcGFyZW50GAEgASgLMhMuVGFzay5XYXNpcDEuUGFyYW1zEiIKBXRhc2tzGAIgAygLMhMuVGFzay5XYXNpcDEuUGFyYW1zGkMKDldhc2lwMVJlc3BvbnNlEg0KBWVycm9yGAEgASgJEiIKBXRhc2tzGAIgAygLMhMuVGFzay5XYXNpcDEuUmVzdWx0GlsKDlB5b2RpZGVSZXF1ZXN0EiQKBnBhcmVudBgBIAEoCzIULlRhc2suUHlvZGlkZS5QYXJhbXMSIwoFdGFza3MYAiADKAsyFC5UYXNrLlB5b2RpZGUuUGFyYW1zGkUKD1B5b2RpZGVSZXNwb25zZRINCgVlcnJvchgBIAEoCRIjCgV0YXNrcxgCIAMoCzIULlRhc2suUHlvZGlkZS5SZXN1bHQqXAoLU3VicHJvdG9jb2wSCwoHVU5LTk9XThAAEiEKHXdhc2ltb2ZmX3Byb3ZpZGVyX3YxX3Byb3RvYnVmEAESHQoZd2FzaW1vZmZfcHJvdmlkZXJfdjFfanNvbhACYghlZGl0aW9uc3DoBw", [file_google_protobuf_any, file_google_protobuf_timestamp]);

/**
 * Envelope is a generic message wrapper with a sequence counter and message type.
 * The payload contains a { Request, Response, Event }.
 *
 * @generated from message Envelope
 */
export type Envelope = Message<"Envelope"> & {
  /**
   * The sequence number is incremented for each message but Request and Event
   * count independently. Responses must always reuse the Request's sequence
   * number so they can be routed to the caller correctly.
   *
   * @generated from field: uint64 sequence = 1;
   */
  sequence: bigint;

  /**
   * The message type indicates the payload contents: { Request, Response, Event }.
   *
   * @generated from field: Envelope.MessageType type = 2;
   */
  type: Envelope_MessageType;

  /**
   * The presence of an error string indicates a fatal failure with a request.
   * Responses should encode specific errors within the payload, if possible.
   *
   * @generated from field: string error = 3;
   */
  error: string;

  /**
   * The payload itself. Needs to be (un)packed with `anypb`.
   *
   * @generated from field: google.protobuf.Any payload = 4;
   */
  payload?: Any;
};

/**
 * JSON type for the message Envelope.
 */
export type EnvelopeJson = {
  /**
   * @generated from field: uint64 sequence = 1;
   */
  sequence?: string;

  /**
   * @generated from field: Envelope.MessageType type = 2;
   */
  type?: Envelope_MessageTypeJson;

  /**
   * @generated from field: string error = 3;
   */
  error?: string;

  /**
   * @generated from field: google.protobuf.Any payload = 4;
   */
  payload?: AnyJson;
};

/**
 * Describes the message Envelope.
 * Use `create(EnvelopeSchema)` to create a new message.
 */
export const EnvelopeSchema: GenMessage<Envelope, EnvelopeJson> = /*@__PURE__*/
  messageDesc(file_messages, 0);

/**
 * @generated from enum Envelope.MessageType
 */
export enum Envelope_MessageType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: Request = 1;
   */
  Request = 1,

  /**
   * @generated from enum value: Response = 2;
   */
  Response = 2,

  /**
   * @generated from enum value: Event = 3;
   */
  Event = 3,
}

/**
 * JSON type for the enum Envelope.MessageType.
 */
export type Envelope_MessageTypeJson = "UNKNOWN" | "Request" | "Response" | "Event";

/**
 * Describes the enum Envelope.MessageType.
 */
export const Envelope_MessageTypeSchema: GenEnum<Envelope_MessageType, Envelope_MessageTypeJson> = /*@__PURE__*/
  enumDesc(file_messages, 0, 0);

/**
 * The task message contains parameters to instantiate a task of a certain format
 * and return the output upon successful execution. The Request and Response herein
 * are the smallest unit of work that should be sent on the wire.
 *
 * @generated from message Task
 */
export type Task = Message<"Task"> & {
};

/**
 * JSON type for the message Task.
 */
export type TaskJson = {
};

/**
 * Describes the message Task.
 * Use `create(TaskSchema)` to create a new message.
 */
export const TaskSchema: GenMessage<Task, TaskJson> = /*@__PURE__*/
  messageDesc(file_messages, 1);

/**
 * Information about this task for identification and tracing.
 *
 * @generated from message Task.Metadata
 */
export type Task_Metadata = Message<"Task.Metadata"> & {
  /**
   * unique identifier for this task
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * who is requesting this task
   *
   * @generated from field: string requester = 2;
   */
  requester: string;

  /**
   * which provider executed this task
   *
   * @generated from field: string provider = 3;
   */
  provider: string;
};

/**
 * JSON type for the message Task.Metadata.
 */
export type Task_MetadataJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: string requester = 2;
   */
  requester?: string;

  /**
   * @generated from field: string provider = 3;
   */
  provider?: string;
};

/**
 * Describes the message Task.Metadata.
 * Use `create(Task_MetadataSchema)` to create a new message.
 */
export const Task_MetadataSchema: GenMessage<Task_Metadata, Task_MetadataJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 0);

/**
 * Quality of Service (QoS) parameters for a given task.
 *
 * @generated from message Task.QoS
 */
export type Task_QoS = Message<"Task.QoS"> & {
  /**
   * @generated from field: bool priority = 1;
   */
  priority: boolean;

  /**
   * TODO
   *
   * @generated from field: google.protobuf.Timestamp deadline = 2;
   */
  deadline?: Timestamp;
};

/**
 * JSON type for the message Task.QoS.
 */
export type Task_QoSJson = {
  /**
   * @generated from field: bool priority = 1;
   */
  priority?: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp deadline = 2;
   */
  deadline?: TimestampJson;
};

/**
 * Describes the message Task.QoS.
 * Use `create(Task_QoSSchema)` to create a new message.
 */
export const Task_QoSSchema: GenMessage<Task_QoS, Task_QoSJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 1);

/**
 * Event to terminate a running task on Provider.
 *
 * @generated from message Task.Cancel
 */
export type Task_Cancel = Message<"Task.Cancel"> & {
  /**
   * unique identifier of the task
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * freeform reason for logging
   *
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * JSON type for the message Task.Cancel.
 */
export type Task_CancelJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: string reason = 2;
   */
  reason?: string;
};

/**
 * Describes the message Task.Cancel.
 * Use `create(Task_CancelSchema)` to create a new message.
 */
export const Task_CancelSchema: GenMessage<Task_Cancel, Task_CancelJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 2);

/**
 * @generated from message Task.Request
 */
export type Task_Request = Message<"Task.Request"> & {
  /**
   * "header"
   *
   * @generated from field: Task.Metadata info = 1;
   */
  info?: Task_Metadata;

  /**
   * @generated from field: Task.QoS qos = 2;
   */
  qos?: Task_QoS;

  /**
   * @generated from oneof Task.Request.parameters
   */
  parameters: {
    /**
     * @generated from field: Task.Wasip1.Params wasip1 = 10;
     */
    value: Task_Wasip1_Params;
    case: "wasip1";
  } | {
    /**
     * @generated from field: Task.Pyodide.Params pyodide = 11;
     */
    value: Task_Pyodide_Params;
    case: "pyodide";
  } | { case: undefined; value?: undefined };
};

/**
 * JSON type for the message Task.Request.
 */
export type Task_RequestJson = {
  /**
   * @generated from field: Task.Metadata info = 1;
   */
  info?: Task_MetadataJson;

  /**
   * @generated from field: Task.QoS qos = 2;
   */
  qos?: Task_QoSJson;

  /**
   * @generated from field: Task.Wasip1.Params wasip1 = 10;
   */
  wasip1?: Task_Wasip1_ParamsJson;

  /**
   * @generated from field: Task.Pyodide.Params pyodide = 11;
   */
  pyodide?: Task_Pyodide_ParamsJson;
};

/**
 * Describes the message Task.Request.
 * Use `create(Task_RequestSchema)` to create a new message.
 */
export const Task_RequestSchema: GenMessage<Task_Request, Task_RequestJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 3);

/**
 * @generated from message Task.Response
 */
export type Task_Response = Message<"Task.Response"> & {
  /**
   * "header"
   *
   * @generated from field: Task.Metadata info = 1;
   */
  info?: Task_Metadata;

  /**
   * @generated from oneof Task.Response.result
   */
  result: {
    /**
     * @generated from field: string error = 2;
     */
    value: string;
    case: "error";
  } | {
    /**
     * @generated from field: Task.Wasip1.Result wasip1 = 10;
     */
    value: Task_Wasip1_Result;
    case: "wasip1";
  } | {
    /**
     * @generated from field: Task.Pyodide.Result pyodide = 11;
     */
    value: Task_Pyodide_Result;
    case: "pyodide";
  } | { case: undefined; value?: undefined };
};

/**
 * JSON type for the message Task.Response.
 */
export type Task_ResponseJson = {
  /**
   * @generated from field: Task.Metadata info = 1;
   */
  info?: Task_MetadataJson;

  /**
   * @generated from field: string error = 2;
   */
  error?: string;

  /**
   * @generated from field: Task.Wasip1.Result wasip1 = 10;
   */
  wasip1?: Task_Wasip1_ResultJson;

  /**
   * @generated from field: Task.Pyodide.Result pyodide = 11;
   */
  pyodide?: Task_Pyodide_ResultJson;
};

/**
 * Describes the message Task.Response.
 * Use `create(Task_ResponseSchema)` to create a new message.
 */
export const Task_ResponseSchema: GenMessage<Task_Response, Task_ResponseJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 4);

/**
 *  WebAssembly System Interface (WASI), preview1
 * ===============================================
 *
 * @generated from message Task.Wasip1
 */
export type Task_Wasip1 = Message<"Task.Wasip1"> & {
};

/**
 * JSON type for the message Task.Wasip1.
 */
export type Task_Wasip1Json = {
};

/**
 * Describes the message Task.Wasip1.
 * Use `create(Task_Wasip1Schema)` to create a new message.
 */
export const Task_Wasip1Schema: GenMessage<Task_Wasip1, Task_Wasip1Json> = /*@__PURE__*/
  messageDesc(file_messages, 1, 5);

/**
 * Contains necessary references and execution arguments to instantiate a single
 * WebAssembly task in a WASI preview 1 environment on the Provider.
 *
 * @generated from message Task.Wasip1.Params
 */
export type Task_Wasip1_Params = Message<"Task.Wasip1.Params"> & {
  /**
   * @generated from field: File binary = 1;
   */
  binary?: File;

  /**
   * @generated from field: repeated string args = 2;
   */
  args: string[];

  /**
   * @generated from field: repeated string envs = 3;
   */
  envs: string[];

  /**
   * @generated from field: bytes stdin = 4;
   */
  stdin: Uint8Array;

  /**
   * @generated from field: File rootfs = 5;
   */
  rootfs?: File;

  /**
   * @generated from field: repeated string artifacts = 6;
   */
  artifacts: string[];
};

/**
 * JSON type for the message Task.Wasip1.Params.
 */
export type Task_Wasip1_ParamsJson = {
  /**
   * @generated from field: File binary = 1;
   */
  binary?: FileJson;

  /**
   * @generated from field: repeated string args = 2;
   */
  args?: string[];

  /**
   * @generated from field: repeated string envs = 3;
   */
  envs?: string[];

  /**
   * @generated from field: bytes stdin = 4;
   */
  stdin?: string;

  /**
   * @generated from field: File rootfs = 5;
   */
  rootfs?: FileJson;

  /**
   * @generated from field: repeated string artifacts = 6;
   */
  artifacts?: string[];
};

/**
 * Describes the message Task.Wasip1.Params.
 * Use `create(Task_Wasip1_ParamsSchema)` to create a new message.
 */
export const Task_Wasip1_ParamsSchema: GenMessage<Task_Wasip1_Params, Task_Wasip1_ParamsJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 5, 0);

/**
 * The result of an execution from a Wasip1.Params message. It should only be
 * returned if the WebAssembly module was instantiated successfully at all.
 *
 * @generated from message Task.Wasip1.Output
 */
export type Task_Wasip1_Output = Message<"Task.Wasip1.Output"> & {
  /**
   * @generated from field: int32 status = 1;
   */
  status: number;

  /**
   * @generated from field: bytes stdout = 2;
   */
  stdout: Uint8Array;

  /**
   * @generated from field: bytes stderr = 3;
   */
  stderr: Uint8Array;

  /**
   * @generated from field: File artifacts = 4;
   */
  artifacts?: File;
};

/**
 * JSON type for the message Task.Wasip1.Output.
 */
export type Task_Wasip1_OutputJson = {
  /**
   * @generated from field: int32 status = 1;
   */
  status?: number;

  /**
   * @generated from field: bytes stdout = 2;
   */
  stdout?: string;

  /**
   * @generated from field: bytes stderr = 3;
   */
  stderr?: string;

  /**
   * @generated from field: File artifacts = 4;
   */
  artifacts?: FileJson;
};

/**
 * Describes the message Task.Wasip1.Output.
 * Use `create(Task_Wasip1_OutputSchema)` to create a new message.
 */
export const Task_Wasip1_OutputSchema: GenMessage<Task_Wasip1_Output, Task_Wasip1_OutputJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 5, 1);

/**
 * Wrap a Wasip1.Output in a Result, which can be an Error or OK.
 *
 * @generated from message Task.Wasip1.Result
 */
export type Task_Wasip1_Result = Message<"Task.Wasip1.Result"> & {
  /**
   * @generated from oneof Task.Wasip1.Result.result
   */
  result: {
    /**
     * @generated from field: string error = 1;
     */
    value: string;
    case: "error";
  } | {
    /**
     * @generated from field: Task.Wasip1.Output ok = 2;
     */
    value: Task_Wasip1_Output;
    case: "ok";
  } | { case: undefined; value?: undefined };
};

/**
 * JSON type for the message Task.Wasip1.Result.
 */
export type Task_Wasip1_ResultJson = {
  /**
   * @generated from field: string error = 1;
   */
  error?: string;

  /**
   * @generated from field: Task.Wasip1.Output ok = 2;
   */
  ok?: Task_Wasip1_OutputJson;
};

/**
 * Describes the message Task.Wasip1.Result.
 * Use `create(Task_Wasip1_ResultSchema)` to create a new message.
 */
export const Task_Wasip1_ResultSchema: GenMessage<Task_Wasip1_Result, Task_Wasip1_ResultJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 5, 2);

/**
 *  Pyodide Python scripts
 * ========================
 *
 * @generated from message Task.Pyodide
 */
export type Task_Pyodide = Message<"Task.Pyodide"> & {
};

/**
 * JSON type for the message Task.Pyodide.
 */
export type Task_PyodideJson = {
};

/**
 * Describes the message Task.Pyodide.
 * Use `create(Task_PyodideSchema)` to create a new message.
 */
export const Task_PyodideSchema: GenMessage<Task_Pyodide, Task_PyodideJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 6);

/**
 * TODO
 *
 * @generated from message Task.Pyodide.Params
 */
export type Task_Pyodide_Params = Message<"Task.Pyodide.Params"> & {
};

/**
 * JSON type for the message Task.Pyodide.Params.
 */
export type Task_Pyodide_ParamsJson = {
};

/**
 * Describes the message Task.Pyodide.Params.
 * Use `create(Task_Pyodide_ParamsSchema)` to create a new message.
 */
export const Task_Pyodide_ParamsSchema: GenMessage<Task_Pyodide_Params, Task_Pyodide_ParamsJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 6, 0);

/**
 * TODO
 *
 * @generated from message Task.Pyodide.Output
 */
export type Task_Pyodide_Output = Message<"Task.Pyodide.Output"> & {
};

/**
 * JSON type for the message Task.Pyodide.Output.
 */
export type Task_Pyodide_OutputJson = {
};

/**
 * Describes the message Task.Pyodide.Output.
 * Use `create(Task_Pyodide_OutputSchema)` to create a new message.
 */
export const Task_Pyodide_OutputSchema: GenMessage<Task_Pyodide_Output, Task_Pyodide_OutputJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 6, 1);

/**
 * Wrap a Pyodide.Output in a Result, which can be an Error or OK.
 *
 * @generated from message Task.Pyodide.Result
 */
export type Task_Pyodide_Result = Message<"Task.Pyodide.Result"> & {
  /**
   * @generated from oneof Task.Pyodide.Result.result
   */
  result: {
    /**
     * @generated from field: string error = 1;
     */
    value: string;
    case: "error";
  } | {
    /**
     * @generated from field: Task.Pyodide.Output ok = 2;
     */
    value: Task_Pyodide_Output;
    case: "ok";
  } | { case: undefined; value?: undefined };
};

/**
 * JSON type for the message Task.Pyodide.Result.
 */
export type Task_Pyodide_ResultJson = {
  /**
   * @generated from field: string error = 1;
   */
  error?: string;

  /**
   * @generated from field: Task.Pyodide.Output ok = 2;
   */
  ok?: Task_Pyodide_OutputJson;
};

/**
 * Describes the message Task.Pyodide.Result.
 * Use `create(Task_Pyodide_ResultSchema)` to create a new message.
 */
export const Task_Pyodide_ResultSchema: GenMessage<Task_Pyodide_Result, Task_Pyodide_ResultJson> = /*@__PURE__*/
  messageDesc(file_messages, 1, 6, 2);

/**
 * File is a file reference with optional mime-type. The ref could be a plain
 * filename, a prefixed hash digest or a URL to fetch from. When stored, a hash
 * digest should be computed to have a stable identifier.
 *
 * @generated from message File
 */
export type File = Message<"File"> & {
  /**
   * filename, encoded digest or URL
   *
   * @generated from field: string ref = 1;
   */
  ref: string;

  /**
   * media type in MIME notation
   *
   * @generated from field: string media = 2;
   */
  media: string;

  /**
   * the actual file contents
   *
   * @generated from field: bytes blob = 3;
   */
  blob: Uint8Array;
};

/**
 * JSON type for the message File.
 */
export type FileJson = {
  /**
   * @generated from field: string ref = 1;
   */
  ref?: string;

  /**
   * @generated from field: string media = 2;
   */
  media?: string;

  /**
   * @generated from field: bytes blob = 3;
   */
  blob?: string;
};

/**
 * Describes the message File.
 * Use `create(FileSchema)` to create a new message.
 */
export const FileSchema: GenMessage<File, FileJson> = /*@__PURE__*/
  messageDesc(file_messages, 2);

/**
 * FileListing asks for a listing of all available files on Provider
 *
 * empty
 *
 * @generated from message FileListingRequest
 */
export type FileListingRequest = Message<"FileListingRequest"> & {
};

/**
 * JSON type for the message FileListingRequest.
 */
export type FileListingRequestJson = {
};

/**
 * Describes the message FileListingRequest.
 * Use `create(FileListingRequestSchema)` to create a new message.
 */
export const FileListingRequestSchema: GenMessage<FileListingRequest, FileListingRequestJson> = /*@__PURE__*/
  messageDesc(file_messages, 3);

/**
 * @generated from message FileListingResponse
 */
export type FileListingResponse = Message<"FileListingResponse"> & {
  /**
   * @generated from field: repeated string files = 1;
   */
  files: string[];
};

/**
 * JSON type for the message FileListingResponse.
 */
export type FileListingResponseJson = {
  /**
   * @generated from field: repeated string files = 1;
   */
  files?: string[];
};

/**
 * Describes the message FileListingResponse.
 * Use `create(FileListingResponseSchema)` to create a new message.
 */
export const FileListingResponseSchema: GenMessage<FileListingResponse, FileListingResponseJson> = /*@__PURE__*/
  messageDesc(file_messages, 4);

/**
 * FileProbe checks if a certain file exists on provider
 *
 * @generated from message FileProbeRequest
 */
export type FileProbeRequest = Message<"FileProbeRequest"> & {
  /**
   * @generated from field: string file = 1;
   */
  file: string;
};

/**
 * JSON type for the message FileProbeRequest.
 */
export type FileProbeRequestJson = {
  /**
   * @generated from field: string file = 1;
   */
  file?: string;
};

/**
 * Describes the message FileProbeRequest.
 * Use `create(FileProbeRequestSchema)` to create a new message.
 */
export const FileProbeRequestSchema: GenMessage<FileProbeRequest, FileProbeRequestJson> = /*@__PURE__*/
  messageDesc(file_messages, 5);

/**
 * @generated from message FileProbeResponse
 */
export type FileProbeResponse = Message<"FileProbeResponse"> & {
  /**
   * @generated from field: bool ok = 1;
   */
  ok: boolean;
};

/**
 * JSON type for the message FileProbeResponse.
 */
export type FileProbeResponseJson = {
  /**
   * @generated from field: bool ok = 1;
   */
  ok?: boolean;
};

/**
 * Describes the message FileProbeResponse.
 * Use `create(FileProbeResponseSchema)` to create a new message.
 */
export const FileProbeResponseSchema: GenMessage<FileProbeResponse, FileProbeResponseJson> = /*@__PURE__*/
  messageDesc(file_messages, 6);

/**
 * FileUpload pushes a file to the Provider.
 *
 * @generated from message FileUploadRequest
 */
export type FileUploadRequest = Message<"FileUploadRequest"> & {
  /**
   * @generated from field: File upload = 1;
   */
  upload?: File;
};

/**
 * JSON type for the message FileUploadRequest.
 */
export type FileUploadRequestJson = {
  /**
   * @generated from field: File upload = 1;
   */
  upload?: FileJson;
};

/**
 * Describes the message FileUploadRequest.
 * Use `create(FileUploadRequestSchema)` to create a new message.
 */
export const FileUploadRequestSchema: GenMessage<FileUploadRequest, FileUploadRequestJson> = /*@__PURE__*/
  messageDesc(file_messages, 7);

/**
 * @generated from message FileUploadResponse
 */
export type FileUploadResponse = Message<"FileUploadResponse"> & {
  /**
   * @generated from field: string err = 1;
   */
  err: string;
};

/**
 * JSON type for the message FileUploadResponse.
 */
export type FileUploadResponseJson = {
  /**
   * @generated from field: string err = 1;
   */
  err?: string;
};

/**
 * Describes the message FileUploadResponse.
 * Use `create(FileUploadResponseSchema)` to create a new message.
 */
export const FileUploadResponseSchema: GenMessage<FileUploadResponse, FileUploadResponseJson> = /*@__PURE__*/
  messageDesc(file_messages, 8);

/**
 * FileDownload can be sent by the Provider to request a file download.
 *
 * @generated from message FileDownloadRequest
 */
export type FileDownloadRequest = Message<"FileDownloadRequest"> & {
  /**
   * @generated from field: string file = 1;
   */
  file: string;
};

/**
 * JSON type for the message FileDownloadRequest.
 */
export type FileDownloadRequestJson = {
  /**
   * @generated from field: string file = 1;
   */
  file?: string;
};

/**
 * Describes the message FileDownloadRequest.
 * Use `create(FileDownloadRequestSchema)` to create a new message.
 */
export const FileDownloadRequestSchema: GenMessage<FileDownloadRequest, FileDownloadRequestJson> = /*@__PURE__*/
  messageDesc(file_messages, 9);

/**
 * @generated from message FileDownloadResponse
 */
export type FileDownloadResponse = Message<"FileDownloadResponse"> & {
  /**
   * @generated from field: File download = 1;
   */
  download?: File;

  /**
   * @generated from field: string err = 2;
   */
  err: string;
};

/**
 * JSON type for the message FileDownloadResponse.
 */
export type FileDownloadResponseJson = {
  /**
   * @generated from field: File download = 1;
   */
  download?: FileJson;

  /**
   * @generated from field: string err = 2;
   */
  err?: string;
};

/**
 * Describes the message FileDownloadResponse.
 * Use `create(FileDownloadResponseSchema)` to create a new message.
 */
export const FileDownloadResponseSchema: GenMessage<FileDownloadResponse, FileDownloadResponseJson> = /*@__PURE__*/
  messageDesc(file_messages, 10);

/**
 * @generated from message Event
 */
export type Event = Message<"Event"> & {
};

/**
 * JSON type for the message Event.
 */
export type EventJson = {
};

/**
 * Describes the message Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event, EventJson> = /*@__PURE__*/
  messageDesc(file_messages, 11);

/**
 * GenericMessage is just a generic piece of text for logging
 *
 * @generated from message Event.GenericMessage
 */
export type Event_GenericMessage = Message<"Event.GenericMessage"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * JSON type for the message Event.GenericMessage.
 */
export type Event_GenericMessageJson = {
  /**
   * @generated from field: string message = 1;
   */
  message?: string;
};

/**
 * Describes the message Event.GenericMessage.
 * Use `create(Event_GenericMessageSchema)` to create a new message.
 */
export const Event_GenericMessageSchema: GenMessage<Event_GenericMessage, Event_GenericMessageJson> = /*@__PURE__*/
  messageDesc(file_messages, 11, 0);

/**
 * ProviderHello is sent once at the beginning to identify the Provider
 *
 * @generated from message Event.ProviderHello
 */
export type Event_ProviderHello = Message<"Event.ProviderHello"> & {
  /**
   * a logging-friendly name of the provider
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * like the navigator.useragent in browser
   *
   * @generated from field: string useragent = 2;
   */
  useragent: string;
};

/**
 * JSON type for the message Event.ProviderHello.
 */
export type Event_ProviderHelloJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string useragent = 2;
   */
  useragent?: string;
};

/**
 * Describes the message Event.ProviderHello.
 * Use `create(Event_ProviderHelloSchema)` to create a new message.
 */
export const Event_ProviderHelloSchema: GenMessage<Event_ProviderHello, Event_ProviderHelloJson> = /*@__PURE__*/
  messageDesc(file_messages, 11, 1);

/**
 * ProviderResources is information about the available resources in Worker pool
 *
 * @generated from message Event.ProviderResources
 */
export type Event_ProviderResources = Message<"Event.ProviderResources"> & {
  /**
   * maximum possible concurrency (~ number of Workers)
   *
   * @generated from field: uint32 concurrency = 1;
   */
  concurrency: number;

  /**
   * currently active tasks
   *
   * @generated from field: uint32 tasks = 2;
   */
  tasks: number;
};

/**
 * JSON type for the message Event.ProviderResources.
 */
export type Event_ProviderResourcesJson = {
  /**
   * @generated from field: uint32 concurrency = 1;
   */
  concurrency?: number;

  /**
   * @generated from field: uint32 tasks = 2;
   */
  tasks?: number;
};

/**
 * Describes the message Event.ProviderResources.
 * Use `create(Event_ProviderResourcesSchema)` to create a new message.
 */
export const Event_ProviderResourcesSchema: GenMessage<Event_ProviderResources, Event_ProviderResourcesJson> = /*@__PURE__*/
  messageDesc(file_messages, 11, 2);

/**
 * ClusterInfo contains information about all connected Providers
 *
 * @generated from message Event.ClusterInfo
 */
export type Event_ClusterInfo = Message<"Event.ClusterInfo"> & {
  /**
   * number of currently connected providers
   *
   * @generated from field: uint32 providers = 1;
   */
  providers: number;
};

/**
 * JSON type for the message Event.ClusterInfo.
 */
export type Event_ClusterInfoJson = {
  /**
   * @generated from field: uint32 providers = 1;
   */
  providers?: number;
};

/**
 * Describes the message Event.ClusterInfo.
 * Use `create(Event_ClusterInfoSchema)` to create a new message.
 */
export const Event_ClusterInfoSchema: GenMessage<Event_ClusterInfo, Event_ClusterInfoJson> = /*@__PURE__*/
  messageDesc(file_messages, 11, 3);

/**
 * Throughput contains information about overall cluster throughput
 *
 * @generated from message Event.Throughput
 */
export type Event_Throughput = Message<"Event.Throughput"> & {
  /**
   * current overall tasks/s throughput
   *
   * @generated from field: float overall = 1;
   */
  overall: number;

  /**
   * your contribution (identified by name)
   *
   * @generated from field: float yours = 2;
   */
  yours: number;
};

/**
 * JSON type for the message Event.Throughput.
 */
export type Event_ThroughputJson = {
  /**
   * @generated from field: float overall = 1;
   */
  overall?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: float yours = 2;
   */
  yours?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message Event.Throughput.
 * Use `create(Event_ThroughputSchema)` to create a new message.
 */
export const Event_ThroughputSchema: GenMessage<Event_Throughput, Event_ThroughputJson> = /*@__PURE__*/
  messageDesc(file_messages, 11, 4);

/**
 * CancelTask tells the Provider that it can terminate a task
 *
 * @generated from message Event.CancelTask
 */
export type Event_CancelTask = Message<"Event.CancelTask"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * JSON type for the message Event.CancelTask.
 */
export type Event_CancelTaskJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: string reason = 2;
   */
  reason?: string;
};

/**
 * Describes the message Event.CancelTask.
 * Use `create(Event_CancelTaskSchema)` to create a new message.
 */
export const Event_CancelTaskSchema: GenMessage<Event_CancelTask, Event_CancelTaskJson> = /*@__PURE__*/
  messageDesc(file_messages, 11, 5);

/**
 * FileSystemUpdate notifies the Broker about changed files on the Provider.
 *
 * @generated from message Event.FileSystemUpdate
 */
export type Event_FileSystemUpdate = Message<"Event.FileSystemUpdate"> & {
  /**
   * @generated from field: repeated string added = 1;
   */
  added: string[];

  /**
   * @generated from field: repeated string removed = 2;
   */
  removed: string[];
};

/**
 * JSON type for the message Event.FileSystemUpdate.
 */
export type Event_FileSystemUpdateJson = {
  /**
   * @generated from field: repeated string added = 1;
   */
  added?: string[];

  /**
   * @generated from field: repeated string removed = 2;
   */
  removed?: string[];
};

/**
 * Describes the message Event.FileSystemUpdate.
 * Use `create(Event_FileSystemUpdateSchema)` to create a new message.
 */
export const Event_FileSystemUpdateSchema: GenMessage<Event_FileSystemUpdate, Event_FileSystemUpdateJson> = /*@__PURE__*/
  messageDesc(file_messages, 11, 6);

/**
 * @generated from message Client
 */
export type Client = Message<"Client"> & {
};

/**
 * JSON type for the message Client.
 */
export type ClientJson = {
};

/**
 * Describes the message Client.
 * Use `create(ClientSchema)` to create a new message.
 */
export const ClientSchema: GenMessage<Client, ClientJson> = /*@__PURE__*/
  messageDesc(file_messages, 12);

/**
 * Jobs specify a simple parent-inheritance structure for each task format, so
 * multiple similar tasks can be sent efficiently in a single HTTP request.
 * There is no magic involved though: anything in the parent gets entirely
 * replaced by the corresponding fields in a task specification. Thus, at least
 * one task must always be present, even if just an empty { } with all
 * parameters inherited from the parent.
 *
 * @generated from message Client.Job
 */
export type Client_Job = Message<"Client.Job"> & {
};

/**
 * JSON type for the message Client.Job.
 */
export type Client_JobJson = {
};

/**
 * Describes the message Client.Job.
 * Use `create(Client_JobSchema)` to create a new message.
 */
export const Client_JobSchema: GenMessage<Client_Job, Client_JobJson> = /*@__PURE__*/
  messageDesc(file_messages, 12, 0);

/**
 * @generated from message Client.Job.Wasip1Request
 */
export type Client_Job_Wasip1Request = Message<"Client.Job.Wasip1Request"> & {
  /**
   * @generated from field: Task.Wasip1.Params parent = 1;
   */
  parent?: Task_Wasip1_Params;

  /**
   * @generated from field: repeated Task.Wasip1.Params tasks = 2;
   */
  tasks: Task_Wasip1_Params[];
};

/**
 * JSON type for the message Client.Job.Wasip1Request.
 */
export type Client_Job_Wasip1RequestJson = {
  /**
   * @generated from field: Task.Wasip1.Params parent = 1;
   */
  parent?: Task_Wasip1_ParamsJson;

  /**
   * @generated from field: repeated Task.Wasip1.Params tasks = 2;
   */
  tasks?: Task_Wasip1_ParamsJson[];
};

/**
 * Describes the message Client.Job.Wasip1Request.
 * Use `create(Client_Job_Wasip1RequestSchema)` to create a new message.
 */
export const Client_Job_Wasip1RequestSchema: GenMessage<Client_Job_Wasip1Request, Client_Job_Wasip1RequestJson> = /*@__PURE__*/
  messageDesc(file_messages, 12, 0, 0);

/**
 * @generated from message Client.Job.Wasip1Response
 */
export type Client_Job_Wasip1Response = Message<"Client.Job.Wasip1Response"> & {
  /**
   * @generated from field: string error = 1;
   */
  error: string;

  /**
   * @generated from field: repeated Task.Wasip1.Result tasks = 2;
   */
  tasks: Task_Wasip1_Result[];
};

/**
 * JSON type for the message Client.Job.Wasip1Response.
 */
export type Client_Job_Wasip1ResponseJson = {
  /**
   * @generated from field: string error = 1;
   */
  error?: string;

  /**
   * @generated from field: repeated Task.Wasip1.Result tasks = 2;
   */
  tasks?: Task_Wasip1_ResultJson[];
};

/**
 * Describes the message Client.Job.Wasip1Response.
 * Use `create(Client_Job_Wasip1ResponseSchema)` to create a new message.
 */
export const Client_Job_Wasip1ResponseSchema: GenMessage<Client_Job_Wasip1Response, Client_Job_Wasip1ResponseJson> = /*@__PURE__*/
  messageDesc(file_messages, 12, 0, 1);

/**
 * @generated from message Client.Job.PyodideRequest
 */
export type Client_Job_PyodideRequest = Message<"Client.Job.PyodideRequest"> & {
  /**
   * @generated from field: Task.Pyodide.Params parent = 1;
   */
  parent?: Task_Pyodide_Params;

  /**
   * @generated from field: repeated Task.Pyodide.Params tasks = 2;
   */
  tasks: Task_Pyodide_Params[];
};

/**
 * JSON type for the message Client.Job.PyodideRequest.
 */
export type Client_Job_PyodideRequestJson = {
  /**
   * @generated from field: Task.Pyodide.Params parent = 1;
   */
  parent?: Task_Pyodide_ParamsJson;

  /**
   * @generated from field: repeated Task.Pyodide.Params tasks = 2;
   */
  tasks?: Task_Pyodide_ParamsJson[];
};

/**
 * Describes the message Client.Job.PyodideRequest.
 * Use `create(Client_Job_PyodideRequestSchema)` to create a new message.
 */
export const Client_Job_PyodideRequestSchema: GenMessage<Client_Job_PyodideRequest, Client_Job_PyodideRequestJson> = /*@__PURE__*/
  messageDesc(file_messages, 12, 0, 2);

/**
 * @generated from message Client.Job.PyodideResponse
 */
export type Client_Job_PyodideResponse = Message<"Client.Job.PyodideResponse"> & {
  /**
   * @generated from field: string error = 1;
   */
  error: string;

  /**
   * @generated from field: repeated Task.Pyodide.Result tasks = 2;
   */
  tasks: Task_Pyodide_Result[];
};

/**
 * JSON type for the message Client.Job.PyodideResponse.
 */
export type Client_Job_PyodideResponseJson = {
  /**
   * @generated from field: string error = 1;
   */
  error?: string;

  /**
   * @generated from field: repeated Task.Pyodide.Result tasks = 2;
   */
  tasks?: Task_Pyodide_ResultJson[];
};

/**
 * Describes the message Client.Job.PyodideResponse.
 * Use `create(Client_Job_PyodideResponseSchema)` to create a new message.
 */
export const Client_Job_PyodideResponseSchema: GenMessage<Client_Job_PyodideResponse, Client_Job_PyodideResponseJson> = /*@__PURE__*/
  messageDesc(file_messages, 12, 0, 3);

/**
 * Subprotocol is used to identify the concrete encoding on the wire.
 *
 * @generated from enum Subprotocol
 */
export enum Subprotocol {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * binary messages with Protobuf encoding
   *
   * @generated from enum value: wasimoff_provider_v1_protobuf = 1;
   */
  wasimoff_provider_v1_protobuf = 1,

  /**
   * text messages with JSON encoding
   *
   * @generated from enum value: wasimoff_provider_v1_json = 2;
   */
  wasimoff_provider_v1_json = 2,
}

/**
 * JSON type for the enum Subprotocol.
 */
export type SubprotocolJson = "UNKNOWN" | "wasimoff_provider_v1_protobuf" | "wasimoff_provider_v1_json";

/**
 * Describes the enum Subprotocol.
 */
export const SubprotocolSchema: GenEnum<Subprotocol, SubprotocolJson> = /*@__PURE__*/
  enumDesc(file_messages, 0);

